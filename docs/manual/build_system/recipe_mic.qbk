[/==============================================================================
    Copyright (C) 2014 Thomas Heller
    Copyright (C) 2007-2013 Hartmut Kaiser

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[section:intel_mic_installation How to Install __hpx__ on the Xeon Phi]

[heading Installation of the Boost Libraries]

* Download __boost_downloads__ for Linux and unpack the retreived tarball.

* Adapt your ~/user-config.jam to contain the following lines:
```
        ## Toolset to be used for compiling for the host
        using intel
            : host
            :
            : <cxxflags>"-std=c++0x"
            ;

        ## Toolset to be used for compiling for the Xeon Phi
        using intel
            : mic
            :
            : <cxxflags>"-std=c++0x -mmic"
              <linkflags>"-std=c++0x -mmic"
            ;
```
[teletype]
* Change to the directory you unpacked boost in (from now on referred to as $BOOST_ROOT)
  and execute the following commands:
```
        ./bootstrap.sh
        ./b2 toolset=intel-mic -j<N>
```
  You should now have all the required boost libraries.

[heading Installation of the hwloc Library]

* Download __hwloc_downloads__, unpack the retreived tarball and change to the
  newly created directory
* Run the configure-make-install procedure as follows

```
    CC=icc CFLAGS=-mmic CXX=icpc CXXFLAGS=-mmic LDFLAGS=-mmic ./configure --host=x86_64-k1om-linux --prefix=$HWLOC_ROOT
    make
    make install
```

[important The minimally required version of the __hwloc__ library on the
           Intel Xeon Phi is V1.6.]

You now have a working hwloc installation in $HWLOC_ROOT.

[heading Building __hpx__]

After all the prerequistes have been successfully installed, we can now start building and
installing __hpx__. The build procedure is almost the same as for __unix_installation__
with the sole difference that you have to enable the Xeon Phi in the CMake Build system.
This is achieved by invoking CMake in the following way:
```
    cmake                                             \
        -DCMAKE_TOOLCHAIN_FILE=/path/to/hpx/cmake/toolchains/XeonPhi.cmake \
        -DBOOST_ROOT=$BOOST_ROOT                      \
        -DHWLOC_ROOT=$HWLOC_ROOT                      \
        /path/to/hpx
```
[c++]
For more detailed information about using __cmake__ please refer its documentation
and to the section __cmake_hpx__. Please pay special attention to the section about
HPX_WITH_MALLOC as this is crucial for getting decent performance on the Xeon Phi.

[endsect] [/ How to Install __hpx__ on the Xeon Phi]
