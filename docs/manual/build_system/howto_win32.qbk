[/==============================================================================
  Copyright (c) 2015 Harris Brakmic

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[/////////////////////////////////////////////////////////////////////////////]
[section:howto_win32 How to build HPX under Windows 10 x64 with Visual Studio 2015]

* Download the __cmake__ V3.4.3 installer (or latest version) from
  [@https://blog.kitware.com/cmake-3-4-3-available-for-download/ here]
* Download the __hwloc__ V1.11.0 (or latest version) from
  [@http://www.open-mpi.org/software/hwloc/v1.11/downloads/hwloc-win64-build-1.11.0.zip here]
  and unpack it.
* Download __boost__ libraries V1.60 (or latest version) from
  [@https://sourceforge.net/projects/boost/files/boost/1.60.0/ here] and
  unpack them.
* Build the boost DLLs and LIBs by using these commands from Command Line
  (or PowerShell). Open CMD/PowerShell inside the Boost dir and type in:

    bootstrap.bat

  This batch file will set up everything needed to create a successful build.
  Now execute:

    b2.exe link=shared variant=release,debug architecture=x86 address-model=64 threading=multi --build-type=complete install

  This command will start a (very long) build of all available Boost libraries.
  Please, be patient.

* Open CMake-GUI.exe and set up your source directory (input field 'Where is the
  source code') to the _base directory_ of the source code you downloaded from
  HPX's GitHub pages. Here's an example of my CMake path settings which point to
  my `Documents/GitHub/hpx` folder:

  [fig cmake_settings1.png..Example CMake path settings..win32_cmake_settings1]

  Inside the 'Where is the source-code' enter the base directory of your HPX
  source directory (do not enter the "src" sub-directory!)
  Inside 'Where to build the binaries' you should put in the path where all the
  building process will happen.
  This is important because the building machinery will do an "out-of-tree" build.
  CMake is not touching or changing in any way the original source files.
  Instead, it will generate Visual Studio Solution Files which will build HPX
  packages out of the HPX source tree.

* Set four new environment variables (in CMake, not in Windows environment,
  by the way): `BOOST_ROOT`, `HWLOC_ROOT`, `CMAKE_INSTALL_PREFIX` and
  `HPX_WITH_BOOST_ALL_DYNAMIC_LINK`

  The meaning of these variables is as follows:

  * `BOOST_ROOT`: the root directory of the unpacked Boost headers/cpp files.
  * `HWLOC_ROOT`: the root directory of the unpacked Portable Hardware Locality
    files.
  * `CMAKE_INSTALL_PREFIX`: the "root directory" where the future builds of
    HPX should be installed to.

  [note HPX is a BIG software collection and I really don't recommend using
          the default `C:\Program Files\hpx`. I prefer simpler paths *without*
          white space, like `C:\bin\hpx` or `D:\bin\hpx` etc.]

  To insert new env-vars click on "Add Entry" and then insert the name
  inside "Name", select `PATH` as Type and put the path-name in "Path"
  text field. Repeat this for the first three variables.

  The last one: `HPX_WITH_BOOST_ALL_DYNAMIC_LINK` is a `BOOL` and must be
  checked (there will be a checkbox instead of a textfield).

  This is how variable insertion looks like:

  [fig cmake_settings2.png..Example CMake Adding Entry..win32_cmake_settings2]

  Alternatively you could provide `BOOST_LIBRARYDIR` instead of `BOOST_ROOT`
  with a difference that `BOOST_LIBRARYDIR` should point to the sudbirectory
  inside Boost root where all the compiled DLLs/LIBs are. I myself have used
  `BOOST_LIBRARYDIR` which pointed to the `bin.v2` subdirectory under the Boost
  rootdir.
  Important is to keep the meanings of these two variables separated from each
  other: `BOOST_DIR` points to the ROOT folder of the boost library.
  `BOOST_LIBRARYDIR` points to the subdir inside Boost root folder where the
  compiled binaries are.

* Click the 'Configure' button of CMake-GUI. You will be immediately presented
  a small window where you can select the C++ compiler to be used within
  Visual Studio. In my case I have used the latest v14 (a.k.a C++ 2015) but
  older versions should be sufficient too. Make sure to select the 64Bit
  compiler

* After the generate process has finished successfully click the 'Generate'
  button.  Now, CMake will put new VS Solution files into the BUILD folder you
  selected at the beginning.

* Open Visual Studio and load the `HPX.sln` from your build folder.

* Go to `CMakePredefinedTargets` and build the `INSTALL` project:

  [fig vs_targets_install.png..Visual Studio INSTALL Target..win32_vs_targets]

  It will take some time to compile everything and in the end you should see an
  output similar to this one:

  [fig vs_build_output.png..Visual Studio Build Output..win32_vs_build_output]


[endsect] [/ How to build HPX under Windows 10 x64 with Visual Studio 2015]
