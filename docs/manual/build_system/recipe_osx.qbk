[/==============================================================================
    Copyright (C) 2014-2015 Thomas Heller
    Copyright (C) 2007-2013 Hartmut Kaiser

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[section:macos_installation How to Install __hpx__ on OS X (Mac)]

This section describes how to build __hpx__ for OS X (Mac).

[teletype]

[heading Build (and install) a recent version of Boost, using Clang and libc++]

    To build Boost with Clang and make it link to libc++ as standard library,
    you'll need to set up either of the following in your `~/user-config.jam`
    file:
``
        # user-config.jam (put this file into your home directory)
        # ...

        using clang
            :
            : "/usr/bin/clang++"
            : <cxxflags>"-std=c++11 -fcolor-diagnostics"
              <linkflags>"-stdlib=libc++ -L/path/to/libcxx/lib"
            ;
``
    (Again, remember to replace `/path/to` with whatever you used earlier.)

    You can then use as build command either:
``
        b2 --build-dir=/tmp/build-boost --layout=versioned toolset=clang install -j4
``
    or
``
        b2 --build-dir=/tmp/build-boost --layout=versioned toolset=clang install -j4
``
    We verified this using Boost V1.53. If you use a different
    version, just remember to replace `/usr/local/include/boost-1_53` with
    whatever include prefix you had in your installation.

[heading Build HPX, finally]
``
        cd /path/to
        git clone https://github.com/STEllAR-GROUP/hpx.git
        mkdir build-hpx && cd build-hpx
``
    To build with Clang 3.2, execute:
``
        cmake ../hpx \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DBOOST_INCLUDE_DIR=/usr/local/include/boost-1_53 \
            -DBOOST_LIBRARY_DIR=/usr/local/lib \
            -DBOOST_SUFFIX=-clang-darwin32-mt-1_53 \
        make
``
    To build with Clang 3.3 (trunk), execute:
``
        cmake ../hpx \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DBOOST_INCLUDE_DIR=/usr/local/include/boost-1_53 \
            -DBOOST_LIBRARY_DIR=/usr/local/lib \
            -DBOOST_SUFFIX=-clang-darwin33-mt-1_53 \
        make
``

For more detailed information about using __cmake__ please refer its documentation
and to the section __cmake_hpx__ for.

[heading Alternative Installation method of HPX on OS X (Mac)]

Alternatively, you can install a recent version of gcc as well as all
required libraries via MacPorts:

# Install __macports__

# Install CMake, gcc 4.8, and hwloc:
``
   sudo port install gcc48
   sudo port install hwloc
``
   You may also want:
``
   sudo port install cmake
   sudo port install git-core
``
# Make this version of gcc your default compiler:
``
   sudo port install gcc_select
   sudo port select gcc mp-gcc48
``
# Build Boost manually (the Boost package of MacPorts is built with Clang, and unfortunately doesn't work with a GCC-build version of HPX):
``
   wget http://sourceforge.net/projects/boost/files/boost/1.54.0/boost_1_54_0.tar.bz2
   tar xjf boost_1_54_0.tar.bz2
   pushd boost_1_54_0
   export BOOST_ROOT=$HOME/boost_1_54_0
   ./bootstrap.sh --prefix=$BOOST_DIR
   ./b2 -j8
   ./b2 -j8 install
   export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$BOOST_ROOT/lib
   popd
``
# Build HPX:
``
   git clone https://github.com/STEllAR-GROUP/hpx.git
   mkdir hpx-build
   pushd hpx-build
   export HPX_ROOT=$HOME/hpx
   cmake -DCMAKE_C_COMPILER=gcc \
       -DCMAKE_CXX_COMPILER=g++ \
       -DCMAKE_FORTRAN_COMPILER=gfortran \
       -DCMAKE_C_FLAGS="-Wno-unused-local-typedefs" \
       -DCMAKE_CXX_FLAGS="-Wno-unused-local-typedefs" \
       -DBOOST_ROOT=$BOOST_ROOT \
       -DHWLOC_ROOT=/opt/local \
       -DCMAKE_INSTALL_PREFIX=$HOME/hpx \
            $(pwd)/../hpx
   make -j8
   make -j8 install
   export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$HPX_ROOT/lib/hpx
   popd
``

# Note that you need to set `BOOST_ROOT`, `HPX_ROOT`, and `DYLD_LIBRARY_PATH`
  (for both `BOOST_ROOT` and `HPX_ROOT`) every time you configure, build, or
  run an HPX application.

# If you want to use HPX with MPI, you need to enable the MPI parcelport, and
  also specify the location of the MPI wrapper scripts. This can be done e.g.
  with the following command:

``
   cmake -DHPX_WITH_PARCELPORT_MPI=ON \
        -DCMAKE_C_COMPILER=gcc \
        -DCMAKE_CXX_COMPILER=g++ \
        -DCMAKE_FORTRAN_COMPILER=gfortran \
        -DMPI_C_COMPILER=openmpicc \
        -DMPI_CXX_COMPILER=openmpic++ \
        -DMPI_FORTRAN_COMPILER=openmpif90 \
        -DCMAKE_C_FLAGS="-Wno-unused-local-typedefs" \
        -DCMAKE_CXX_FLAGS="-Wno-unused-local-typedefs" \
        -DBOOST_ROOT=$BOOST_DIR \
        -DHWLOC_ROOT=/opt/local \
        -DCMAKE_INSTALL_PREFIX=$HOME/hpx
            $(pwd)/../hpx
``

[c++]
[endsect]

