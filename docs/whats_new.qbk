[/==============================================================================
    Copyright (C) 2007-2017 Hartmut Kaiser
    Copyright (c) 2016 Adrian Serio

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[section:whats_new What's New]

[//////////////////////////////////////////////////////////////////////////////]
[section:hpx_1_1_0 __hpx__ V1.1]

[heading General Changes]

Here are some of the main highlights and changes for this release (in no
particular order):

* Added a compatibility layer for `std::thread`, `std::mutex`, and
  `std::condition_variable` allowing for the code to use those facilities where
  available and to fall back to the corresponding Boost facilities otherwise.
  The cmake configuration option `-DHPX_WITH_THREAD_COMPATIBILITY=On` can be
  used to force using the Boost equivalents.
* The parameter sequence for the `hpx::parallel::transform_inclusive_scan` overload
  taking one iterator range has changed (again) to match the changes this algorithm
  has undergone while being moved to C++17. The old overloads can be still enabled
  at configure time by passing `-DHPX_WITH_TRANSFORM_REDUCE_COMPATIBILITY=On`
  to __cmake__.
* The parameter sequence for the `hpx::parallel::inclusive_scan` overload
  taking one iterator range has changed to match the changes this algorithm
  has undergone while being moved to C++17. The old overloads can be still enabled
  at configure time by passing `-DHPX_WITH_INCLUSIVE_SCAN_COMPATIBILITY=On`
  to __cmake__.
* Added a helper facility `hpx::local_new` which is equivalent to `hpx::new_`
  except that it creates components locally only. As a consequence, the used
  component constructor may accept non-serializable argument types and/or
  non-const references or pointers.
* Removed the (broken) component type `hpx::lcos::queue<T>`. The old type is
  still available at configure time by passing
  `-DHPX_WITH_QUEUE_COMPATIBILITY=On` to __cmake__.
* The parallel algorithms adopted for C++17 restrict the iterator categories
  usable with those to at least forward iterators. Our implementation of the
  parallel algorithms was supporting input iterators (and output iterators)
  as well by simply falling back to sequential execution. We have now made
  our implementations conforming by requiring at least forward iterators. In
  order to enable the old behavior use the the compatibility option
  `-DHPX_WITH_ALGORITHM_INPUT_ITERATOR_SUPPORT=On` on the __cmake__ command
  line.

[heading Breaking Changes]

* We have dropped support for the gcc compiler version V4.8. The
  minimal gcc version we now test on is gcc V4.9.
* We have dropped support for the Visual Studio 2013 compiler version. The
  minimal Visual Studio version we now test on is Visual Studio 2015.5.
* We have dropped support for the Boost V1.51-V1.54. The minimal version of
  Boost we now test is Boost V1.55.
* We have dropped support for the `hpx::util::unwrapped` API.
  `hpx::util::unwrapped` will stay functional to some degree,
  until it finally gets removed in a later version of HPX.
  The functional usage of `hpx::util::unwrapped` should be
  changed to the new `hpx::util::unwrapping` function whereas
  the immediate usage should be replaced to `hpx::util::unwrap`.

[heading Bug Fixes (Closed Tickets)]

Here is a list of the important tickets we closed for this release.

* [issue 2768] - Is there iterator tag for HPX?
* [pr    2765] - gcc split stack support for HPX threads #620
* [pr    2764] - Fix some uses of begin/end, remove unnecessary includes
* [pr    2763] - Bump minimal Boost version to 1.55.0
* [pr    2758] - Remove various warnings detected by clang 5.0
* [issue 2757] - In case of a "raw thread" is needed per core for implementing
                 parallel algorithm, what is good practice in HPX?
* [pr    2755] - Removing make_index_pack_unrolled
* [pr    2754] - Implement parallel::unique_copy
* [pr    2753] - Fixing detection of [[fallthrough]] attribute
* [pr    2752] - New thread priority names
* [pr    2751] - Replace boost::exception with proposed exception_info
* [pr    2750] - Replace boost::iterator_range
* [pr    2749] - Fixing hdf5 examples
* [issue 2748] - HPX fails to build with enabled hdf5 examples
* [issue 2747] - Inherited task priorities break certain DAG optimizations
* [pr    2745] - Adding extended arithmetic performance counters
* [pr    2744] - Adding ability to statistics counters to reset base counter
* [issue 2743] - Statistics counter does not support reseting
* [pr    2742] - Making sure Vc V2 builds without additional HPX configuration
                 flags
* [pr    2740] - Coroutine stackoverflow detection for linux/posix; Issue #2408
* [pr    2739] - Add files via upload
* [pr    2738] - Appveyor support
* [pr    2737] - Fixing 2735
* [issue 2735] - partitioned_vector_subview test failing
* [pr    2734] - Add C++11 range utilities
* [pr    2733] - Adapting iterator requirements for parallel algorithms
* [pr    2731] - Adding on_migrated event handler to migratable component
                 instances
* [issue 2729] - Add on_migrated() event handler to migratable components
* [issue 2728] - Why Projection is needed in parallel algorithms?
* [pr    2727] - Cmake files for StackOverflow Detection
* [pr    2726] - CMake for Stack Overflow Detection
* [pr    2724] - Fix examples in Action documentation
* [pr    2723] - Enable lcos::channel<T>::register_as
* [issue 2722] - channel register_as() failing on compilation
* [pr    2719] - Add documentation for partitioned_vector and add features in
                 pack.hpp
* [pr    2717] - Config support for fallthrough attribute
* [pr    2716] - Implement parallel::partition_copy
* [pr    2715] - initial import of icu string serializer
* [pr    2714] - initial import of valarray serializer
* [pr    2713] - Remove slashes before CMAKE_FILES_DIRECTORY variables
* [pr    2712] - Fixing wait for 1751
* [pr    2711] - Adjust code for minimal supported GCC having being bumped to 4.9
* [pr    2710] - Adding code of conduct
* [pr    2709] - Fixing UB in destroy tests
* [pr    2708] - Add inline to prevent multiple definition issue
* [issue 2707] - Multiple defined symbols for task_block.hpp in VS2015
* [pr    2706] - Adding .clang-format file
* [pr    2704] - Add a synchronous mapping API
* [issue 2703] - Request: Add the .clang-format file to the repository
* [issue 2702] - STEllAR-GROUP/Vc slower than VCv1 possibly due to wrong
                 instructions generated
* [issue 2701] - Dataper with STEllAR-GROUP/Vc requires obscure flag
* [issue 2699] - Iterator requirements are different from standard in parallel
                 copy_if.
* [pr    2698] - Properly releasing parcelport write handlers
* [issue 2697] - Compile error in addressing_service.cpp
* [issue 2696] - Building and using HPX statically: undefined references from
                 runtime_support_server.cpp
* [issue 2695] - Executor changes cause compilation failures
* [pr    2694] - Refining C++ language mode detection for MSVC
* [pr    2693] - P0443 r2
* [pr    2692] - Partially reverting changes to parcel_await
* [issue 2689] - HPX build fails when HPX_WITH_CUDA is enabled
* [pr    2688] - Make Cuda Clang builds pass
* [pr    2687] - Add an is_tuple_like trait for sequenceable type detection
* [pr    2686] - Allowing throttling scheduler to be used without idle backoff
* [pr    2685] - Add support of std::array to hpx::util::tuple_size and tuple_element
* [pr    2684] - Adding new statistics performance counters
* [pr    2683] - Replace boost::exception_ptr with std::exception_ptr
* [issue 2682] - HPX does not compile with HPX_WITH_THREAD_MANAGER_IDLE_BACKOFF=OFF
* [pr    2681] - Attempt to fix problem in managed_component_base
* [pr    2680] - Fix bad size during archive creation
* [pr    2677] - Adding include check for std::addressof
* [pr    2676] - Adding parallel::destroy and destroy_n
* [pr    2675] - Making sure statistics counters work as expected
* [pr    2674] - Turning assertions into exceptions
* [pr    2673] - Inhibit direct conversion from future<future<T>> --> future<void>
* [pr    2672] - C++17 invoke forms
* [pr    2671] - Adding uninitialized_value_construct and
                 uninitialized_value_construct_n
* [pr    2670] - Integrate spmd multidimensionnal views for partitioned_vectors
* [pr    2669] - Adding uninitialized_default_construct and
                 uninitialized_default_construct_n
* [pr    2668] - Fixing documentation index
* [issue 2667] - Ambiguity of nested hpx::future<void>'s
* [issue 2666] - Statistics Performance counter is not working
* [pr    2664] - Adding uninitialized_move and uninitialized_move_n
* [issue 2663] - Seg fault in managed_component::get_base_gid, possibly cause
                 by util::reinitializable_static
* [issue 2662] - Crash in managed_component::get_base_gid due to problem with
                 util::reinitializable_static
* [pr    2665] - Hide the `detail` namespace in doxygen per default
* [pr    2660] - Add documentation to hpx::util::unwrapped and hpx::util::unwrapped2
* [pr    2659] - Improve integration with vcpkg
* [pr    2658] - Unify access_data trait for use in both, serialization and
                 de-serialization
* [pr    2657] - Removing hpx::lcos::queue<T>
* [pr    2655] - Mainteinance for emulate-deleted macros
* [pr    2654] - Implement parallel is_heap and is_heap_until
* [pr    2653] - Drop support for VS2013
* [pr    2652] - This patch makes sure that all parcels in a batch are properly
                 handled
* [pr    2649] - Update docs (Table 18) - move transform to end
* [issue 2647] - hpx::parcelset::detail::parcel_data::has_continuation_ is
                 unitialized
* [issue 2644] - Some .vcxproj in the HPX.sln fail to build
* [issue 2641] - `hpx::lcos::queue` should be deprecated
* [pr    2640] - A new throttling policy with public APIs to suspend/resume
* [pr    2639] - Fix a tiny typo in tutorial.
* [issue 2638] - Invalid return type 'void' of constexpr function
* [pr    2636] - Add and use HPX_MSVC_WARNING_PRAGMA for #pragma warning
* [pr    2633] - Distributed define_spmd_block
* [pr    2632] - Making sure container serialization uses size-compatible types
* [pr    2631] - Add lcos::local::one_element_channel
* [pr    2629] - Move unordered_map out of parcelport into hpx/concurrent
* [pr    2628] - Making sure that shutdown does not hang
* [pr    2627] - Fix serialization
* [pr    2626] - Generate `cmake_variables.qbk` and `cmake_toolchains.qbk` outside
                 of the source tree
* [pr    2625] - Supporting -std=c++17 flag
* [pr    2624] - Fixing a smalll cmake typo
* [pr    2622] - Update CMake minimum required version to 3.0.2 (closes #2621)
* [issue 2621] - Compiling hpx master fails with /usr/bin/ld: final link failed:
                 Bad value
* [pr    2620] - Remove warnings due to some captured variables
* [pr    2619] - LF multiple parcels
* [pr    2618] - Some fixes to libfabric that didn't get caught before the merge
* [pr    2617] - Adding `hpx::local_new`
* [pr    2616] - Documentation: Extract all entities in order to autolink functions
                 correctly
* [issue 2615] - Documentation: Linking functions is broken
* [pr    2614] - Adding serialization for std::deque
* [pr    2613] - We need to link with boost.thread and boost.chrono if we use
                 boost.context
* [pr    2612] - Making sure for_loop_n(par, ...) is actually executed in parallel
* [pr    2611] - Add documentation to invoke_fused and friends NFC
* [pr    2610] - Added reduction templates using an identity value
* [pr    2608] - Fixing some unused vars in inspect
* [pr    2607] - Fixed build for mingw
* [pr    2606] - Supporting generic context for boost >= 1.61
* [pr    2605] - Parcelport libfabric3
* [pr    2604] - Adding allocator support to promise and friends
* [pr    2603] - Barrier hang
* [pr    2602] - Changes to scheduler to steal from one high-priority queue
* [pr    2600] - Compat fixes
* [pr    2599] - Compatibility layer for threading support
* [pr    2598] - V1.1
* [pr    2597] - Release V1.0
* [pr    2592] - First attempt to introduce spmd_block in hpx
* [pr    2586] - local_segment in segmented_iterator_traits
* [issue 2584] - Add allocator support to promise, packaged_task and friends
* [pr    2576] - Add missing dependencies of cuda based tests
* [pr    2575] - Remove warnings due to some captured variables
* [issue 2574] - MSVC 2015 Compiler crash when building HPX
* [issue 2568] - Remove throttle_scheduler as it has been abandoned
* [issue 2543] - make install fails due to a non-existing .so file
* [pr    2495] - wait_or_add_new returning thread_id_type
* [issue 2471] - no type named 'fcontext_t' in namespace
* [issue 2266] - hpx_0.9.99 make tests fail
* [pr    2454] - Fix a couple of warnings and compiler errors
* [pr    2453] - Timed executor support
* [pr    2447] - Implementing new executor API (P0443)
* [pr    2195] - Support for code completion in VIM
* [pr    1914] - Parallel heap algorithm implementations WIP

[endsect]

[/////////////////////////////////////////////////////////////////////////////]
[include whats_new_previous.qbk]

[endsect] [/ What's New]

[/Proofread by:]
[/Adrian Serio 6-28-16]
[/Patricia Grubel 3-20-15]
