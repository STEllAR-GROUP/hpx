[/==============================================================================
    Copyright (C) 2007-2018 Hartmut Kaiser

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[/////////////////////////////////////////////////////////////////////////////]
[section:hpx_0_9_6 __hpx__ V0.9.6 (Jul 30, 2013)]

We have had over 1200 commits since the last release and we have closed
roughly 140 tickets (bugs, feature requests, etc.).

[heading General Changes]

The major new fetures in this release are:

* We further consolidated the API exposed by __hpx__. We aligned our APIs as much as
  possible with the existing __cpp11__ and related proposals to the
  C++ standardization committee (such as __cpp11_n3632__ and __cpp11_n3634__).
* We implemented a first version of a distributed AGAS service which essentially
  eliminates all explicit AGAS network traffic.
* We created a native ibverbs parcelport allowing to take advantage of the
  superior latency and bandwidth characteristics of Infiniband networks.
* We successfully ported __hpx__ to the Xeon Phi platform.
* Support for the SLURM scheduling system was implemented.
* Major efforts have been dedicated to improving the performance counter
  framework, numerous new counters were implemented and new APIs were added.
* We added a modular parcel compression system allowing to improve bandwidth
  utilization (by reducing the overall size of the tranferred data).
* We added a modular parcel coalescing system allowing to combine several
  parcels into larger messages. This reduces latencies introduced by the
  communication layer.
* Added an experimental executors API allowing to use different scheduling
  policies for different parts of the code. This API has been modelled after
  the Standards proposal __cpp11_n3562__. This API is bound to change in
  the future, though.
* Added minimal security support for localities which is enforced on the
  parcelport level. This support is preliminary and experimental and might
  change in the future.
* We created a parcelport using low level MPI functions. This is in support
  of legacy applications which are to be gradually ported and to support
  platforms where MPI is the only available portable networking layer.
* We added a preliminary and experimental implementation of a tuple-space
  object which exposes an interface similar to such systems described in the
  literature (see for instance __linda__).

[heading Bug Fixes (Closed Tickets)]

Here is a list of the important tickets we closed for this release. This is again
a very long list of newly implemented features and fixed issues.

* [issue 806] - make (all) in examples folder does nothing
* [issue 805] - Adding the introduction and fixing DOCBOOK dependencies for
                Windows use
* [issue 804] - Add stackless (non-suspendable) thread type
* [issue 803] - Create proper serialization support functions for util::tuple
* [issue 800] - Add possibility to disable array optimizations during serialization
* [issue 798] - HPX_LIMIT does not work for local dataflow
* [issue 797] - Create a parcelport which uses MPI
* [issue 796] - Problem with Large Numbers of Threads
* [issue 793] - Changing dataflow test case to hang consistently
* [issue 792] - CMake Error
* [issue 791] - Problems with local::dataflow
* [issue 790] - wait_for() doesn't compile
* [issue 789] - HPX with Intel compiler segfaults
* [issue 788] - Intel compiler support
* [issue 787] - Fixed SFINAEd specializations
* [issue 786] - Memory issues during benchmarking.
* [issue 785] - Create an API allowing to register external threads with HPX
* [issue 784] - util::plugin is throwing an error when a symbol is not found
* [issue 783] - How does hpx:bind work?
* [issue 782] - Added quotes around STRING REPLACE potentially empty arguments
* [issue 781] - Make sure no exceptions propagate into the thread manager
* [issue 780] - Allow arithmetics performance counters to expand its parameters
* [issue 779] - Test case for 778
* [issue 778] - Swapping futures segfaults
* [issue 777] - hpx::lcos::details::when_xxx don't restore completion handlers
* [issue 776] - Compiler chokes on dataflow overload with launch policy
* [issue 775] - Runtime error with local dataflow (copying futures?)
* [issue 774] - Using local dataflow without explicit namespace
* [issue 773] - Local dataflow with unwrap: functor operators need to be const
* [issue 772] - Allow (remote) actions to return a future
* [issue 771] - Setting HPX_LIMIT gives huge boost MPL errors
* [issue 770] - Add launch policy to (local) dataflow
* [issue 769] - Make compile time configuration information available
* [issue 768] - Const correctness problem in local dataflow
* [issue 767] - Add launch policies to async
* [issue 766] - Mark data structures for optimized (array based) serialization
* [issue 765] - Align hpx::any with N3508: Any Library Proposal (Revision 2)
* [issue 764] - Align hpx::future with newest N3558: A Standardized Representation
                of Asynchronous Operations
* [issue 762] - added a human readable output for the ping pong example
* [issue 761] - Ambiguous typename when constructing derived component
* [issue 760] - Simple components can not be derived
* [issue 759] - make install doesn't give a complete install
* [issue 758] - Stack overflow when using locking_hook<>
* [issue 757] - copy paste error; unsupported function overloading
* [issue 756] - GTCX runtime issue in Gordon
* [issue 755] - Papi counters don't work with reset and evaluate API's
* [issue 753] - cmake bugfix and improved component action docs
* [issue 752] - hpx simple component docs
* [issue 750] - Add hpx::util::any
* [issue 749] - Thread phase counter is not reset
* [issue 748] - Memory performance counter are not registered
* [issue 747] - Create performance counters exposing arithmetic operations
* [issue 745] - apply_callback needs to invoke callback when applied locally
* [issue 744] - CMake fixes
* [issue 743] - Problem Building github version of HPX
* [issue 742] - Remove HPX_STD_BIND
* [issue 741] - assertion 'px != 0' failed: HPX(assertion_failure) for low
                numbers of OS threads
* [issue 739] - Performance counters do not count to the end of the program
                or evalution
* [issue 738] - Dedicated AGAS server runs don't work; console ignores -a option.
* [issue 737] - Missing bind overloads
* [issue 736] - Performance counter wildcards do not always work
* [issue 735] - Create native ibverbs parcelport based on rdma operations
* [issue 734] - Threads stolen performance counter total is incorrect
* [issue 733] - Test benchmarks need to be checked and fixed
* [issue 732] - Build fails with Mac, using mac ports clang-3.3 on latest git
                branch
* [issue 731] - Add global start/stop API for performance counters
* [issue 730] - Performance counter values are apparently incorrect
* [issue 729] - Unhandled switch
* [issue 728] - Serialization of hpx::util::function between two localities
                causes seg faults
* [issue 727] - Memory counters on Mac OS X
* [issue 725] - Restore original thread priority on resume
* [issue 724] - Performance benchmarks do not depend on main HPX libraries
* [issue 723] - [teletype]--hpx:nodes=`cat $PBS_NODEFILE` works; --hpx:nodefile=$PBS_NODEFILE
                does not.[c++]
* [issue 722] - Fix binding const member functions as actions
* [issue 719] - Create performance counter exposing compression ratio
* [issue 718] - Add possibility to compress parcel data
* [issue 717] - strip_credit_from_gid has misleading semantics
* [issue 716] - Non-option arguments to programs run using `pbsdsh` must be
                before `--hpx:nodes`, contrary to directions
* [issue 715] - Re-thrown exceptions should retain the original call site
* [issue 714] - failed assertion in debug mode
* [issue 713] - Add performance counters monitoring connection caches
* [issue 712] - Adjust parcel related performance counters to be connection type
                specific
* [issue 711] - configuration failure
* [issue 710] - Error "timed out while trying to find room in the connection
                cache" when trying to start multiple localities on a single
                computer
* [issue 709] - Add new thread state 'staged' referring to task descriptions
* [issue 708] - Detect/mitigate bad non-system installs of GCC on Redhat systems
* [issue 707] - Many examples do not link with Git HEAD version
* [issue 706] - `hpx::init` removes portions of non-option command line
                arguments before last `=` sign
* [issue 705] - Create rolling average and median aggregating performance
                counters
* [issue 704] - Create performance counter to expose thread queue waiting time
* [issue 703] - Add support to HPX build system to find librcrtool.a and
                related headers
* [issue 699] - Generalize instrumentation support
* [issue 698] - compilation failure with hwloc absent
* [issue 697] - Performance counter counts should be zero indexed
* [issue 696] - Distributed problem
* [issue 695] - Bad perf counter time printed
* [issue 693] - `--help` doesn't print component specific command line options
* [issue 692] - SLURM support broken
* [issue 691] - exception while executing any application linked with hwloc
* [issue 690] - thread_id_test and thread_launcher_test failing
* [issue 689] - Make the buildbots use hwloc
* [issue 687] - compilation error fix (hwloc_topology)
* [issue 686] - Linker Error for Applications
* [issue 684] - Pinning of service thread fails when number of worker threads
                equals the number of cores
* [issue 682] - Add performance counters exposing number of stolen threads
* [issue 681] - Add apply_continue for asynchronous chaining of actions
* [issue 679] - Remove obsolete async_callback API functions
* [issue 678] - Add new API for setting/triggering LCOs
* [issue 677] - Add async_continue for true continuation style actions
* [issue 676] - Buildbot for gcc 4.4 broken
* [issue 675] - Partial preprocessing broken
* [issue 674] - HPX segfaults when built with gcc 4.7
* [issue 673] - `use_guard_pages` has inconsistent preprocessor guards
* [issue 672] - External build breaks if library path has spaces
* [issue 671] - release tarballs are tarbombs
* [issue 670] - CMake won't find Boost headers in layout=versioned install
* [issue 669] - Links in docs to source files broken if not installed
* [issue 667] - Not reading ini file properly
* [issue 664] - Adapt new meanings of 'const' and 'mutable'
* [issue 661] - Implement BTL Parcel port
* [issue 655] - Make HPX work with the "decltype" result_of
* [issue 647] - documentation for specifying the number of high priority threads
                `--hpx:high-priority-threads`
* [issue 643] - Error parsing host file
* [issue 642] - HWLoc issue with TAU
* [issue 639] - Logging potentially suspends a running thread
* [issue 634] - Improve error reporting from parcel layer
* [issue 627] - Add tests for async and apply overloads that accept regular
                C++ functions
* [issue 626] - hpx/future.hpp header
* [issue 601] - Intel support
* [issue 557] - Remove action codes
* [issue 531] - AGAS request and response classes should use switch statements
* [issue 529] - Investigate the state of hwloc support
* [issue 526] - Make HPX aware of hyper-threading
* [issue 518] - Create facilities allowing to use plain arrays as action
                arguments
* [issue 473] - hwloc thread binding is broken on CPUs with hyperthreading
* [issue 383] - Change result type detection for hpx::util::bind to use
                result_of protocol
* [issue 341] - Consolidate route code
* [issue 219] - Only copy arguments into actions once
* [issue 177] - Implement distributed AGAS
* [issue 43]  - Support for Darwin (Xcode + Clang)

[endsect]
