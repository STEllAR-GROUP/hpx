[/==============================================================================
    Copyright (C) 2007-2018 Hartmut Kaiser

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[/////////////////////////////////////////////////////////////////////////////]
[section:hpx_0_9_9 __hpx__ V0.9.9 (Oct 31, 2014, codename Spooky)]

[heading General Changes]

We have had over 1500 commits since the last release and we have closed
over 200 tickets (bugs, feature requests, pull requests, etc.). These are by
far the largest numbers of commits and resolved issues for any of the __hpx__
releases so far.
We are especially happy about the large number of people who contributed for
the first time to __hpx__.

* We completed the transition from the older (non-conforming) implementation
  of `hpx::future` to the new and fully conforming version by removing the
  old code and by renaming the type `hpx::unique_future` to `hpx::future`. In
  order to maintain backwards compatibility with existing code which uses the
  type `hpx::unique_future` we support the configuration variable
  `HPX_UNIQUE_FUTURE_ALIAS`. If this variable is set to `ON` while running
  cmake it will additionally define a template alias for this type.
* We rewrote and significantly changed our build system. Please have a look at
  the new (now generated) documentation here:
  [link hpx.manual.build_system __hpx__ build system]. Please revisit your
  build scripts to adapt to the changes. The most notable changes are:
   * `HPX_NO_INSTALL` is no longer necessary.
   * For external builds, you need to set `HPX_DIR` instead of `HPX_ROOT` as
     described here:
     [link hpx.manual.build_system.using_hpx.using_hpx_cmake Using CMake].
   * IDEs that support multiple configurations (Visual Studio and XCode) can
     now be used as intended. that means no build dir.
   * Building HPX statically (without dynamic libraries) is now supported
     (`-DHPX_STATIC_LINKING=On`).
   * Please note that many variables used to configure the build process have
     been renamed to unify the naming conventions (see the section
     [link hpx.manual.build_system.building_hpx.cmake_variables CMake Variables used to configure __hpx__]
     for more information).
   * This also fixes a long list of issues, for more information see [issue 1204].
* We started to implement various proposals to the C++ Standardization committee
  related to parallelism and concurrency, most notably __cpp11_n4104__ (Working
  Draft, Technical Specification for C++ Extensions for Parallelism),
  __cpp11_n4088__ (Task Region Rev. 3), and __cpp11_n4107__ (Working Draft,
  Technical Specification for C++ Extensions for Concurrency).
* We completely remodeled our automatic build system to run builds and unit tests
  on various systems and compilers. This allows us to find most bugs right as
  they were introduced and helps to maintain a high level of quality and
  compatibility. The newest build logs can be found at __stellar_hpx_buildbot__.

[heading Bug Fixes (Closed Tickets)]

Here is a list of the important tickets we closed for this release.

* [issue 1296] - Rename make_error_future to make_exceptional_future, adjust
                 to N4123
* [issue 1295] - building issue
* [issue 1293] - Transpose example
* [issue 1292] - Wrong abs() function used in example
* [issue 1291] - non-synchronized shift operators have been removed
* [issue 1290] - RDTSCP is defined as true for Xeon Phi build
* [issue 1289] - Fixing 1288
* [issue 1288] - Add new performance counters
* [issue 1287] - Hierarchy scheduler broken performance counters
* [issue 1286] - Algorithm cleanup
* [issue 1285] - Broken Links in Documentation
* [issue 1284] - Uninitialized copy
* [issue 1283] - missing boost::scoped_ptr includes
* [issue 1282] - Update documentation of build options for schedulers
* [issue 1281] - reset idle rate counter
* [issue 1280] - Bug when executing on Intel MIC
* [issue 1279] - Add improved when_all/wait_all
* [issue 1278] - Implement improved when_all/wait_all
* [issue 1277] - feature request: get access to argc argv and variables_map
* [issue 1276] - Remove merging map
* [issue 1274] - Weird (wrong) string code in papi.cpp
* [issue 1273] - Sequential task execution policy
* [issue 1272] - Avoid CMake name clash for Boost.Thread library
* [issue 1271] - Updates on HPX Test Units
* [issue 1270] - hpx/util/safe_lexical_cast.hpp is added
* [issue 1269] - Added default value for "LIB" cmake variable
* [issue 1268] - Memory Counters not working
* [issue 1266] - FindHPX.cmake is not installed
* [issue 1263] - apply_remote test takes too long
* [issue 1262] - Chrono cleanup
* [issue 1261] - Need make install for papi counters and this builds all the
                 examples
* [issue 1260] - Documentation of Stencil example claims
* [issue 1259] - Avoid double-linking Boost on Windows
* [issue 1257] - Adding additional parameter to create_thread
* [issue 1256] - added buildbot changes to release notes
* [issue 1255] - Cannot build MiniGhost
* [issue 1253] - hpx::thread defects
* [issue 1252] - HPX_PREFIX is too fragile
* [issue 1250] - switch_to_fiber_emulation does not work properly
* [issue 1249] - Documentation is generated under Release folder
* [issue 1248] - Fix usage of hpx_generic_coroutine_context and get tests
                 passing on powerpc
* [issue 1247] - Dynamic linking error
* [issue 1246] - Make cpuid.cpp C++11 compliant
* [issue 1245] - HPX fails on startup (setting thread affinity mask)
* [issue 1244] - HPX_WITH_RDTSC configure test fails, but should succeed
* [issue 1243] - CTest dashboard info for CSCS CDash drop location
* [issue 1242] - Mac fixes
* [issue 1241] - Failure in Distributed with Boost 1.56
* [issue 1240] - fix a race condition in examples.diskperf
* [issue 1239] - fix wait_each in examples.diskperf
* [issue 1238] - Fixed #1237: hpx::util::portable_binary_iarchive failed
* [issue 1237] - hpx::util::portable_binary_iarchive faileds
* [issue 1235] - Fixing clang warnings and errors
* [issue 1234] - TCP runs fail: Transport endpoint is not connected
* [issue 1233] - Making sure the correct number of threads is registered with
                 AGAS
* [issue 1232] - Fixing race in wait_xxx
* [issue 1231] - Parallel minmax
* [issue 1230] - Distributed run of 1d_stencil_8 uses less threads than spec.
                 & sometimes gives errors
* [issue 1229] - Unstable number of threads
* [issue 1228] - HPX link error (cmake / MPI)
* [issue 1226] - Warning about struct/class thread_counters
* [issue 1225] - Adding parallel::replace etc
* [issue 1224] - Extending dataflow to pass through non-future arguments
* [issue 1223] - Remaining find algorithms implemented, N4071
* [issue 1222] - Merging all the changes
* [issue 1221] - No error output when using mpirun with hpx
* [issue 1219] - Adding new AGAS cache performance counters
* [issue 1216] - Fixing using futures (clients) as arguments to actions
* [issue 1215] - Error compiling simple component
* [issue 1214] - Stencil docs
* [issue 1213] - Using more than a few dozen MPI processes on SuperMike results
                 in a seg fault before getting to hpx_main
* [issue 1212] - Parallel rotate
* [issue 1211] - Direct actions cause the future's shared_state to be leaked
* [issue 1210] - Refactored local::promise to be standard conformant
* [issue 1209] - Improve command line handling
* [issue 1208] - Adding parallel::reverse and parallel::reverse_copy
* [issue 1207] - Add copy_backward and move_backward
* [issue 1206] - N4071 additional algorithms implemented
* [issue 1204] - Cmake simplification and various other minor changes
* [issue 1203] - Implementing new launch policy for (local) async:
                 `hpx::launch::fork`.
* [issue 1202] - Failed assertion in connection_cache.hpp
* [issue 1201] - pkg-config doesn't add mpi link directories
* [issue 1200] - Error when querying time performance counters
* [issue 1199] - library path is now configurable (again)
* [issue 1198] - Error when querying performance counters
* [issue 1197] - tests fail with intel compiler
* [issue 1196] - Silence several warnings
* [issue 1195] - Rephrase initializers to work with VC++ 2012
* [issue 1194] - Simplify parallel algorithms
* [issue 1193] - Adding `parallel::equal`
* [issue 1192] - HPX(out_of_memory) on including <hpx/hpx.hpp>
* [issue 1191] - Fixing #1189
* [issue 1190] - Chrono cleanup
* [issue 1189] - Deadlock .. somewhere? (probably serialization)
* [issue 1188] - Removed `future::get_status()`
* [issue 1186] - Fixed FindOpenCL to find current AMD APP SDK
* [issue 1184] - Tweaking future unwrapping
* [issue 1183] - Extended `parallel::reduce`
* [issue 1182] - `future::unwrap` hangs for `launch::deferred`
* [issue 1181] - Adding `all_of`, `any_of`, and `none_of` and corresponding
                 documentation
* [issue 1180] - `hpx::cout` defect
* [issue 1179] - `hpx::async` does not work for member function pointers when
                 called on types with self-defined unary `operator*`
* [issue 1178] - Implemented variadic `hpx::util::zip_iterator`
* [issue 1177] - MPI parcelport defect
* [issue 1176] - `HPX_DEFINE_COMPONENT_CONST_ACTION_TPL` does not have a
                 2-argument version
* [issue 1175] - Create util::zip_iterator working with util::tuple<>
* [issue 1174] - Error Building HPX on linux, root_certificate_authority.cpp
* [issue 1173] - hpx::cout output lost
* [issue 1172] - HPX build error with Clang 3.4.2
* [issue 1171] - `CMAKE_INSTALL_PREFIX` ignored
* [issue 1170] - Close hpx_benchmarks repository on Github
* [issue 1169] - Buildbot emails have syntax error in url
* [issue 1167] - Merge partial implementation of standards proposal N3960
* [issue 1166] - Fixed several compiler warnings
* [issue 1165] - cmake warns: "tests.regressions.actions" does not exist
* [issue 1164] - Want my own serialization of hpx::future
* [issue 1162] - Segfault in hello_world example
* [issue 1161] - Use `HPX_ASSERT` to aid the compiler
* [issue 1160] - Do not put -DNDEBUG into hpx_application.pc
* [issue 1159] - Support Clang 3.4.2
* [issue 1158] - Fixed #1157: Rename when_n/wait_n, add when_xxx_n/wait_xxx_n
* [issue 1157] - Rename when_n/wait_n, add when_xxx_n/wait_xxx_n
* [issue 1156] - Force inlining fails
* [issue 1155] - changed header of printout to be compatible with python csv module
* [issue 1154] - Fixing iostreams
* [issue 1153] - Standard manipulators (like std::endl) do not work with
                 hpx::ostream
* [issue 1152] - Functions revamp
* [issue 1151] - Supressing cmake 3.0 policy warning for CMP0026
* [issue 1150] - Client Serialization error
* [issue 1149] - Segfault on Stampede
* [issue 1148] - Refactoring mini-ghost
* [issue 1147] - N3960 copy_if and copy_n implemented and tested
* [issue 1146] - Stencil print
* [issue 1145] - N3960 hpx::parallel::copy implemented and tested
* [issue 1144] - OpenMP examples 1d_stencil do not build
* [issue 1143] - 1d_stencil OpenMP examples do not build
* [issue 1142] - Cannot build HPX with gcc 4.6 on OS X
* [issue 1140] - Fix OpenMP lookup, enable usage of config tests in external
                 CMake projects.
* [issue 1139] - hpx/hpx/config/compiler_specific.hpp
* [issue 1138] - clean up pkg-config files
* [issue 1137] - Improvements to create binary packages
* [issue 1136] - HPX_GCC_VERSION not defined on all compilers
* [issue 1135] - Avoiding collision between winsock2.h and windows.h
* [issue 1134] - Making sure, that hpx::finalize can be called from any locality
* [issue 1133] - 1d stencil examples
* [issue 1131] - Refactor unique_function implementation
* [issue 1130] - Unique function
* [issue 1129] - Some fixes to the Build system on OS X
* [issue 1128] - Action future args
* [issue 1127] - Executor causes segmentation fault
* [issue 1124] - Adding new API functions: `register_id_with_basename`,
                 `unregister_id_with_basename`, `find_ids_from_basename`;
                 adding test
* [issue 1123] - Reduce nesting of try-catch construct in `encode_parcels`?
* [issue 1122] - Client base fixes
* [issue 1121] - Update `hpxrun.py.in`
* [issue 1120] - HTTS2 tests compile errors on v110 (VS2012)
* [issue 1119] - Remove references to boost::atomic in accumulator example
* [issue 1118] - Only build test thread_pool_executor_1114_test if
                 `HPX_LOCAL_SCHEDULER` is set
* [issue 1117] - local_queue_executor linker error on vc110
* [issue 1116] - Disabled performance counter should give runtime errors, not
                 invalid data
* [issue 1115] - Compile error with Intel C++ 13.1
* [issue 1114] - Default constructed executor is not usable
* [issue 1113] - Fast compilation of logging causes ABI incompatibilities
                 between different `NDEBUG` values
* [issue 1112] - Using thread_pool_executors causes segfault
* [issue 1111] - `hpx::threads::get_thread_data` always returns zero
* [issue 1110] - Remove unnecessary null pointer checks
* [issue 1109] - More tests adjustments
* [issue 1108] - Clarify build rules for "libboost_atomic-mt.so"?
* [issue 1107] - Remove unnecessary null pointer checks
* [issue 1106] - network_storage benchmark imporvements, adding legends to
                 plots and tidying layout
* [issue 1105] - Add more plot outputs and improve instructions doc
* [issue 1104] - Complete quoting for parameters of some CMake commands
* [issue 1103] - Work on test/scripts
* [issue 1102] - Changed minimum requirement of window install to 2012
* [issue 1101] - Changed minimum requirement of window install to 2012
* [issue 1100] - Changed readme to no longer specify using MSVC 2010 compiler
* [issue 1099] - Error returning futures from component actions
* [issue 1098] - Improve storage test
* [issue 1097] - data_actions quickstart example calls missing function
                 decorate_action of data_get_action
* [issue 1096] - MPI parcelport broken with new zero copy optimization
* [issue 1095] - Warning C4005: _WIN32_WINNT: Macro redefinition
* [issue 1094] - Syntax error for -DHPX_UNIQUE_FUTURE_ALIAS in master
* [issue 1093] - Syntax error for -DHPX_UNIQUE_FUTURE_ALIAS
* [issue 1092] - Rename unique_future<> back to future<>
* [issue 1091] - Inconsistent error message
* [issue 1090] - On windows 8.1 the examples crashed if using more than one os
                 thread
* [issue 1089] - Components should be allowed to have their own executor
* [issue 1088] - Add possibility to select a network interface for the
                 ibverbs parcelport
* [issue 1087] - ibverbs and ipc parcelport uses zero copy optimization
* [issue 1083] - Make shell examples copyable in docs
* [issue 1082] - Implement proper termination detection during shutdown
* [issue 1081] - Implement thread_specific_ptr for hpx::threads
* [issue 1072] - make install not working properly
* [issue 1070] - Complete quoting for parameters of some CMake commands
* [issue 1059] - Fix more unused variable warnings
* [issue 1051] - Implement when_each
* [issue 973]  - Would like option to report hwloc bindings
* [issue 970]  - Bad flags for Fortran compiler
* [issue 941]  - Create a proper user level context switching class for BG/Q
* [issue 935]  - Build error with gcc 4.6 and Boost 1.54.0 on hpx trunk and
                 0.9.6
* [issue 934]  - Want to build HPX without dynamic libraries
* [issue 927]  - Make hpx/lcos/reduce.hpp accept futures of id_type
* [issue 926]  - All unit tests that are run with more than one thread with
                 CTest/hpx_run_test should configure hpx.os_threads
* [issue 925]  - regression_dataflow_791 needs to be brought in line with HPX
                 standards
* [issue 899]  - Fix race conditions in regression tests
* [issue 879]  - Hung test leads to cascading test failure; make tests should
                 support the MPI parcelport
* [issue 865]  - future<T> and friends shall work for movable only Ts
* [issue 847]  - Dynamic libraries are not installed on OS X
* [issue 816]  - First Program tutorial pull request
* [issue 799]  - Wrap lexical_cast to avoid exceptions
* [issue 720]  - broken configuration when using ccmake on Ubuntu
* [issue 622]  - `--hpx:hpx` and `--hpx:debug-hpx-log` is nonsensical
* [issue 525]  - Extend barrier LCO test to run in distributed
* [issue 515]  - Multi-destination version of hpx::apply is broken
* [issue 509]  - Push Boost.Atomic changes upstream
* [issue 503]  - Running HPX applications on Windows should not require setting
                 %PATH%
* [issue 461]  - Add a compilation sanity test
* [issue 456]  - hpx_run_tests.py should log output from tests that timeout
* [issue 454]  - Investigate threadmanager performance
* [issue 345]  - Add more versatile environmental/cmake variable support to
                 hpx_find_* CMake macros
* [issue 209]  - Support multiple configurations in generated build files
* [issue 190]  - hpx::cout should be a std::ostream
* [issue 189]  - iostreams component should use startup/shutdown functions
* [issue 183]  - Use Boost.ICL for correctness in AGAS
* [issue 44]   - Implement real futures

[endsect]
