// Copyright (c) 2007-2013 Hartmut Kaiser
// Copyright (c) 2012-2013 Thomas Heller
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

// This file has been automatically generated using the Boost.Wave tool.
// Do not edit manually.


namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0
        >
        struct bound_action1
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action1()
            {}
            template <typename A0>
            bound_action1(
                BOOST_FWD_REF(A0) a0
            )
                : arg0(boost::forward<A0>(a0))
            {}
            bound_action1(
                    bound_action1 const & other)
                : arg0(other.arg0)
            {}
            bound_action1(BOOST_RV_REF(
                    bound_action1) other)
                : arg0(boost::move(other.arg0))
            {}
            bound_action1 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action1) other)
            {
                arg0 = other.arg0;
                return *this;
            }
            bound_action1 & operator=(
                BOOST_RV_REF(bound_action1) other)
            {
                arg0 = boost::move(other.arg0);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  
                        );
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  
                        );
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) ); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  
                        );
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  
                        );
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) ); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  
                        ).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  
                        ).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          
                ).get();
    }
            Arg0 arg0;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0
        >
        typename detail::bound_action1<
                Action , Arg0
        >::result_type
        eval(
            Env & env
          , detail::bound_action1<
                Action
              , Arg0
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action1<
                        Action
                      , Arg0
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0
    >
    detail::bound_action1<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0
    )
    {
        return
            detail::bound_action1<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type
            > (boost::forward<A0>( a0 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0
    >
    detail::bound_action1<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0
    )
    {
        return
            detail::bound_action1<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type
            > (boost::forward<A0>( a0 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action1<
            Action
          , Arg0
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0;
    }
    template <
        typename Action
      , typename Arg0
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action1<
            Action
          , Arg0
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1
        >
        struct bound_action2
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action2()
            {}
            template <typename A0 , typename A1>
            bound_action2(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1))
            {}
            bound_action2(
                    bound_action2 const & other)
                : arg0(other.arg0) , arg1(other.arg1)
            {}
            bound_action2(BOOST_RV_REF(
                    bound_action2) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1))
            {}
            bound_action2 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action2) other)
            {
                arg0 = other.arg0; arg1 = other.arg1;
                return *this;
            }
            bound_action2 & operator=(
                BOOST_RV_REF(bound_action2) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1)).get();
    }
            Arg0 arg0; Arg1 arg1;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1
        >
        typename detail::bound_action2<
                Action , Arg0 , Arg1
        >::result_type
        eval(
            Env & env
          , detail::bound_action2<
                Action
              , Arg0 , Arg1
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action2<
                        Action
                      , Arg0 , Arg1
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1
    >
    detail::bound_action2<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1
    )
    {
        return
            detail::bound_action2<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1
    >
    detail::bound_action2<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1
    )
    {
        return
            detail::bound_action2<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action2<
            Action
          , Arg0 , Arg1
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action2<
            Action
          , Arg0 , Arg1
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2
        >
        struct bound_action3
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action3()
            {}
            template <typename A0 , typename A1 , typename A2>
            bound_action3(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2))
            {}
            bound_action3(
                    bound_action3 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2)
            {}
            bound_action3(BOOST_RV_REF(
                    bound_action3) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2))
            {}
            bound_action3 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action3) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2;
                return *this;
            }
            bound_action3 & operator=(
                BOOST_RV_REF(bound_action3) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2
        >
        typename detail::bound_action3<
                Action , Arg0 , Arg1 , Arg2
        >::result_type
        eval(
            Env & env
          , detail::bound_action3<
                Action
              , Arg0 , Arg1 , Arg2
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action3<
                        Action
                      , Arg0 , Arg1 , Arg2
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2
    >
    detail::bound_action3<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2
    )
    {
        return
            detail::bound_action3<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2
    >
    detail::bound_action3<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2
    )
    {
        return
            detail::bound_action3<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action3<
            Action
          , Arg0 , Arg1 , Arg2
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action3<
            Action
          , Arg0 , Arg1 , Arg2
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3
        >
        struct bound_action4
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action4()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3>
            bound_action4(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3))
            {}
            bound_action4(
                    bound_action4 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3)
            {}
            bound_action4(BOOST_RV_REF(
                    bound_action4) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3))
            {}
            bound_action4 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action4) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3;
                return *this;
            }
            bound_action4 & operator=(
                BOOST_RV_REF(bound_action4) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3
        >
        typename detail::bound_action4<
                Action , Arg0 , Arg1 , Arg2 , Arg3
        >::result_type
        eval(
            Env & env
          , detail::bound_action4<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action4<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3
    >
    detail::bound_action4<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3
    )
    {
        return
            detail::bound_action4<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3
    >
    detail::bound_action4<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3
    )
    {
        return
            detail::bound_action4<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action4<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action4<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4
        >
        struct bound_action5
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action5()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
            bound_action5(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4))
            {}
            bound_action5(
                    bound_action5 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4)
            {}
            bound_action5(BOOST_RV_REF(
                    bound_action5) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4))
            {}
            bound_action5 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action5) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4;
                return *this;
            }
            bound_action5 & operator=(
                BOOST_RV_REF(bound_action5) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4
        >
        typename detail::bound_action5<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4
        >::result_type
        eval(
            Env & env
          , detail::bound_action5<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action5<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4
    >
    detail::bound_action5<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4
    )
    {
        return
            detail::bound_action5<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4
    >
    detail::bound_action5<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4
    )
    {
        return
            detail::bound_action5<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action5<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action5<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5
        >
        struct bound_action6
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action6()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
            bound_action6(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5))
            {}
            bound_action6(
                    bound_action6 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5)
            {}
            bound_action6(BOOST_RV_REF(
                    bound_action6) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5))
            {}
            bound_action6 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action6) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5;
                return *this;
            }
            bound_action6 & operator=(
                BOOST_RV_REF(bound_action6) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5
        >
        typename detail::bound_action6<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5
        >::result_type
        eval(
            Env & env
          , detail::bound_action6<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action6<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5
    >
    detail::bound_action6<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5
    )
    {
        return
            detail::bound_action6<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5
    >
    detail::bound_action6<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5
    )
    {
        return
            detail::bound_action6<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action6<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action6<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6
        >
        struct bound_action7
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action7()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
            bound_action7(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6))
            {}
            bound_action7(
                    bound_action7 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6)
            {}
            bound_action7(BOOST_RV_REF(
                    bound_action7) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6))
            {}
            bound_action7 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action7) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6;
                return *this;
            }
            bound_action7 & operator=(
                BOOST_RV_REF(bound_action7) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6
        >
        typename detail::bound_action7<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6
        >::result_type
        eval(
            Env & env
          , detail::bound_action7<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action7<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6
    >
    detail::bound_action7<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6
    )
    {
        return
            detail::bound_action7<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6
    >
    detail::bound_action7<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6
    )
    {
        return
            detail::bound_action7<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action7<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action7<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7
        >
        struct bound_action8
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action8()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
            bound_action8(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7))
            {}
            bound_action8(
                    bound_action8 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7)
            {}
            bound_action8(BOOST_RV_REF(
                    bound_action8) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7))
            {}
            bound_action8 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action8) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7;
                return *this;
            }
            bound_action8 & operator=(
                BOOST_RV_REF(bound_action8) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7
        >
        typename detail::bound_action8<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7
        >::result_type
        eval(
            Env & env
          , detail::bound_action8<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action8<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7
    >
    detail::bound_action8<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7
    )
    {
        return
            detail::bound_action8<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7
    >
    detail::bound_action8<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7
    )
    {
        return
            detail::bound_action8<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action8<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action8<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8
        >
        struct bound_action9
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action9()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
            bound_action9(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7)) , arg8(boost::forward<A8>(a8))
            {}
            bound_action9(
                    bound_action9 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7) , arg8(other.arg8)
            {}
            bound_action9(BOOST_RV_REF(
                    bound_action9) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7)) , arg8(boost::move(other.arg8))
            {}
            bound_action9 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action9) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7; arg8 = other.arg8;
                return *this;
            }
            bound_action9 & operator=(
                BOOST_RV_REF(bound_action9) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7); arg8 = boost::move(other.arg8);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7; Arg8 arg8;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8
        >
        typename detail::bound_action9<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8
        >::result_type
        eval(
            Env & env
          , detail::bound_action9<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action9<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8
    >
    detail::bound_action9<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8
    )
    {
        return
            detail::bound_action9<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8
    >
    detail::bound_action9<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8
    )
    {
        return
            detail::bound_action9<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action9<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action9<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9
        >
        struct bound_action10
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action10()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
            bound_action10(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7)) , arg8(boost::forward<A8>(a8)) , arg9(boost::forward<A9>(a9))
            {}
            bound_action10(
                    bound_action10 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7) , arg8(other.arg8) , arg9(other.arg9)
            {}
            bound_action10(BOOST_RV_REF(
                    bound_action10) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7)) , arg8(boost::move(other.arg8)) , arg9(boost::move(other.arg9))
            {}
            bound_action10 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action10) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7; arg8 = other.arg8; arg9 = other.arg9;
                return *this;
            }
            bound_action10 & operator=(
                BOOST_RV_REF(bound_action10) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7); arg8 = boost::move(other.arg8); arg9 = boost::move(other.arg9);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7; Arg8 arg8; Arg9 arg9;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9
        >
        typename detail::bound_action10<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9
        >::result_type
        eval(
            Env & env
          , detail::bound_action10<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action10<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9
    >
    detail::bound_action10<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9
    )
    {
        return
            detail::bound_action10<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9
    >
    detail::bound_action10<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9
    )
    {
        return
            detail::bound_action10<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action10<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action10<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10
        >
        struct bound_action11
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action11()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
            bound_action11(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7)) , arg8(boost::forward<A8>(a8)) , arg9(boost::forward<A9>(a9)) , arg10(boost::forward<A10>(a10))
            {}
            bound_action11(
                    bound_action11 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7) , arg8(other.arg8) , arg9(other.arg9) , arg10(other.arg10)
            {}
            bound_action11(BOOST_RV_REF(
                    bound_action11) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7)) , arg8(boost::move(other.arg8)) , arg9(boost::move(other.arg9)) , arg10(boost::move(other.arg10))
            {}
            bound_action11 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action11) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7; arg8 = other.arg8; arg9 = other.arg9; arg10 = other.arg10;
                return *this;
            }
            bound_action11 & operator=(
                BOOST_RV_REF(bound_action11) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7); arg8 = boost::move(other.arg8); arg9 = boost::move(other.arg9); arg10 = boost::move(other.arg10);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7; Arg8 arg8; Arg9 arg9; Arg10 arg10;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10
        >
        typename detail::bound_action11<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10
        >::result_type
        eval(
            Env & env
          , detail::bound_action11<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action11<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10
    >
    detail::bound_action11<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10
    )
    {
        return
            detail::bound_action11<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10
    >
    detail::bound_action11<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10
    )
    {
        return
            detail::bound_action11<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action11<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action11<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11
        >
        struct bound_action12
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action12()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
            bound_action12(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7)) , arg8(boost::forward<A8>(a8)) , arg9(boost::forward<A9>(a9)) , arg10(boost::forward<A10>(a10)) , arg11(boost::forward<A11>(a11))
            {}
            bound_action12(
                    bound_action12 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7) , arg8(other.arg8) , arg9(other.arg9) , arg10(other.arg10) , arg11(other.arg11)
            {}
            bound_action12(BOOST_RV_REF(
                    bound_action12) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7)) , arg8(boost::move(other.arg8)) , arg9(boost::move(other.arg9)) , arg10(boost::move(other.arg10)) , arg11(boost::move(other.arg11))
            {}
            bound_action12 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action12) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7; arg8 = other.arg8; arg9 = other.arg9; arg10 = other.arg10; arg11 = other.arg11;
                return *this;
            }
            bound_action12 & operator=(
                BOOST_RV_REF(bound_action12) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7); arg8 = boost::move(other.arg8); arg9 = boost::move(other.arg9); arg10 = boost::move(other.arg10); arg11 = boost::move(other.arg11);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7; Arg8 arg8; Arg9 arg9; Arg10 arg10; Arg11 arg11;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11
        >
        typename detail::bound_action12<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11
        >::result_type
        eval(
            Env & env
          , detail::bound_action12<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action12<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11
    >
    detail::bound_action12<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11
    )
    {
        return
            detail::bound_action12<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11
    >
    detail::bound_action12<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11
    )
    {
        return
            detail::bound_action12<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action12<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action12<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12
        >
        struct bound_action13
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action13()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
            bound_action13(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7)) , arg8(boost::forward<A8>(a8)) , arg9(boost::forward<A9>(a9)) , arg10(boost::forward<A10>(a10)) , arg11(boost::forward<A11>(a11)) , arg12(boost::forward<A12>(a12))
            {}
            bound_action13(
                    bound_action13 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7) , arg8(other.arg8) , arg9(other.arg9) , arg10(other.arg10) , arg11(other.arg11) , arg12(other.arg12)
            {}
            bound_action13(BOOST_RV_REF(
                    bound_action13) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7)) , arg8(boost::move(other.arg8)) , arg9(boost::move(other.arg9)) , arg10(boost::move(other.arg10)) , arg11(boost::move(other.arg11)) , arg12(boost::move(other.arg12))
            {}
            bound_action13 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action13) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7; arg8 = other.arg8; arg9 = other.arg9; arg10 = other.arg10; arg11 = other.arg11; arg12 = other.arg12;
                return *this;
            }
            bound_action13 & operator=(
                BOOST_RV_REF(bound_action13) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7); arg8 = boost::move(other.arg8); arg9 = boost::move(other.arg9); arg10 = boost::move(other.arg10); arg11 = boost::move(other.arg11); arg12 = boost::move(other.arg12);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7; Arg8 arg8; Arg9 arg9; Arg10 arg10; Arg11 arg11; Arg12 arg12;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12
        >
        typename detail::bound_action13<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12
        >::result_type
        eval(
            Env & env
          , detail::bound_action13<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action13<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12
    >
    detail::bound_action13<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12
    )
    {
        return
            detail::bound_action13<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12
    >
    detail::bound_action13<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12
    )
    {
        return
            detail::bound_action13<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action13<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action13<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13
        >
        struct bound_action14
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action14()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
            bound_action14(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7)) , arg8(boost::forward<A8>(a8)) , arg9(boost::forward<A9>(a9)) , arg10(boost::forward<A10>(a10)) , arg11(boost::forward<A11>(a11)) , arg12(boost::forward<A12>(a12)) , arg13(boost::forward<A13>(a13))
            {}
            bound_action14(
                    bound_action14 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7) , arg8(other.arg8) , arg9(other.arg9) , arg10(other.arg10) , arg11(other.arg11) , arg12(other.arg12) , arg13(other.arg13)
            {}
            bound_action14(BOOST_RV_REF(
                    bound_action14) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7)) , arg8(boost::move(other.arg8)) , arg9(boost::move(other.arg9)) , arg10(boost::move(other.arg10)) , arg11(boost::move(other.arg11)) , arg12(boost::move(other.arg12)) , arg13(boost::move(other.arg13))
            {}
            bound_action14 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action14) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7; arg8 = other.arg8; arg9 = other.arg9; arg10 = other.arg10; arg11 = other.arg11; arg12 = other.arg12; arg13 = other.arg13;
                return *this;
            }
            bound_action14 & operator=(
                BOOST_RV_REF(bound_action14) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7); arg8 = boost::move(other.arg8); arg9 = boost::move(other.arg9); arg10 = boost::move(other.arg10); arg11 = boost::move(other.arg11); arg12 = boost::move(other.arg12); arg13 = boost::move(other.arg13);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7; Arg8 arg8; Arg9 arg9; Arg10 arg10; Arg11 arg11; Arg12 arg12; Arg13 arg13;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13
        >
        typename detail::bound_action14<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13
        >::result_type
        eval(
            Env & env
          , detail::bound_action14<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action14<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13
    >
    detail::bound_action14<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13
    )
    {
        return
            detail::bound_action14<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13
    >
    detail::bound_action14<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13
    )
    {
        return
            detail::bound_action14<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action14<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12; ar & bound.arg13;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action14<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12; ar & bound.arg13;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14
        >
        struct bound_action15
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action15()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
            bound_action15(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7)) , arg8(boost::forward<A8>(a8)) , arg9(boost::forward<A9>(a9)) , arg10(boost::forward<A10>(a10)) , arg11(boost::forward<A11>(a11)) , arg12(boost::forward<A12>(a12)) , arg13(boost::forward<A13>(a13)) , arg14(boost::forward<A14>(a14))
            {}
            bound_action15(
                    bound_action15 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7) , arg8(other.arg8) , arg9(other.arg9) , arg10(other.arg10) , arg11(other.arg11) , arg12(other.arg12) , arg13(other.arg13) , arg14(other.arg14)
            {}
            bound_action15(BOOST_RV_REF(
                    bound_action15) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7)) , arg8(boost::move(other.arg8)) , arg9(boost::move(other.arg9)) , arg10(boost::move(other.arg10)) , arg11(boost::move(other.arg11)) , arg12(boost::move(other.arg12)) , arg13(boost::move(other.arg13)) , arg14(boost::move(other.arg14))
            {}
            bound_action15 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action15) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7; arg8 = other.arg8; arg9 = other.arg9; arg10 = other.arg10; arg11 = other.arg11; arg12 = other.arg12; arg13 = other.arg13; arg14 = other.arg14;
                return *this;
            }
            bound_action15 & operator=(
                BOOST_RV_REF(bound_action15) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7); arg8 = boost::move(other.arg8); arg9 = boost::move(other.arg9); arg10 = boost::move(other.arg10); arg11 = boost::move(other.arg11); arg12 = boost::move(other.arg12); arg13 = boost::move(other.arg13); arg14 = boost::move(other.arg14);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7; Arg8 arg8; Arg9 arg9; Arg10 arg10; Arg11 arg11; Arg12 arg12; Arg13 arg13; Arg14 arg14;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14
        >
        typename detail::bound_action15<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14
        >::result_type
        eval(
            Env & env
          , detail::bound_action15<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action15<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14
    >
    detail::bound_action15<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14
    )
    {
        return
            detail::bound_action15<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14
    >
    detail::bound_action15<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14
    )
    {
        return
            detail::bound_action15<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action15<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12; ar & bound.arg13; ar & bound.arg14;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action15<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12; ar & bound.arg13; ar & bound.arg14;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15
        >
        struct bound_action16
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action16()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
            bound_action16(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7)) , arg8(boost::forward<A8>(a8)) , arg9(boost::forward<A9>(a9)) , arg10(boost::forward<A10>(a10)) , arg11(boost::forward<A11>(a11)) , arg12(boost::forward<A12>(a12)) , arg13(boost::forward<A13>(a13)) , arg14(boost::forward<A14>(a14)) , arg15(boost::forward<A15>(a15))
            {}
            bound_action16(
                    bound_action16 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7) , arg8(other.arg8) , arg9(other.arg9) , arg10(other.arg10) , arg11(other.arg11) , arg12(other.arg12) , arg13(other.arg13) , arg14(other.arg14) , arg15(other.arg15)
            {}
            bound_action16(BOOST_RV_REF(
                    bound_action16) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7)) , arg8(boost::move(other.arg8)) , arg9(boost::move(other.arg9)) , arg10(boost::move(other.arg10)) , arg11(boost::move(other.arg11)) , arg12(boost::move(other.arg12)) , arg13(boost::move(other.arg13)) , arg14(boost::move(other.arg14)) , arg15(boost::move(other.arg15))
            {}
            bound_action16 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action16) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7; arg8 = other.arg8; arg9 = other.arg9; arg10 = other.arg10; arg11 = other.arg11; arg12 = other.arg12; arg13 = other.arg13; arg14 = other.arg14; arg15 = other.arg15;
                return *this;
            }
            bound_action16 & operator=(
                BOOST_RV_REF(bound_action16) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7); arg8 = boost::move(other.arg8); arg9 = boost::move(other.arg9); arg10 = boost::move(other.arg10); arg11 = boost::move(other.arg11); arg12 = boost::move(other.arg12); arg13 = boost::move(other.arg13); arg14 = boost::move(other.arg14); arg15 = boost::move(other.arg15);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7; Arg8 arg8; Arg9 arg9; Arg10 arg10; Arg11 arg11; Arg12 arg12; Arg13 arg13; Arg14 arg14; Arg15 arg15;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15
        >
        typename detail::bound_action16<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15
        >::result_type
        eval(
            Env & env
          , detail::bound_action16<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action16<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15
    >
    detail::bound_action16<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15
    )
    {
        return
            detail::bound_action16<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15
    >
    detail::bound_action16<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15
    )
    {
        return
            detail::bound_action16<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action16<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12; ar & bound.arg13; ar & bound.arg14; ar & bound.arg15;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action16<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12; ar & bound.arg13; ar & bound.arg14; ar & bound.arg15;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15 , typename Arg16
        >
        struct bound_action17
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action17()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
            bound_action17(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7)) , arg8(boost::forward<A8>(a8)) , arg9(boost::forward<A9>(a9)) , arg10(boost::forward<A10>(a10)) , arg11(boost::forward<A11>(a11)) , arg12(boost::forward<A12>(a12)) , arg13(boost::forward<A13>(a13)) , arg14(boost::forward<A14>(a14)) , arg15(boost::forward<A15>(a15)) , arg16(boost::forward<A16>(a16))
            {}
            bound_action17(
                    bound_action17 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7) , arg8(other.arg8) , arg9(other.arg9) , arg10(other.arg10) , arg11(other.arg11) , arg12(other.arg12) , arg13(other.arg13) , arg14(other.arg14) , arg15(other.arg15) , arg16(other.arg16)
            {}
            bound_action17(BOOST_RV_REF(
                    bound_action17) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7)) , arg8(boost::move(other.arg8)) , arg9(boost::move(other.arg9)) , arg10(boost::move(other.arg10)) , arg11(boost::move(other.arg11)) , arg12(boost::move(other.arg12)) , arg13(boost::move(other.arg13)) , arg14(boost::move(other.arg14)) , arg15(boost::move(other.arg15)) , arg16(boost::move(other.arg16))
            {}
            bound_action17 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action17) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7; arg8 = other.arg8; arg9 = other.arg9; arg10 = other.arg10; arg11 = other.arg11; arg12 = other.arg12; arg13 = other.arg13; arg14 = other.arg14; arg15 = other.arg15; arg16 = other.arg16;
                return *this;
            }
            bound_action17 & operator=(
                BOOST_RV_REF(bound_action17) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7); arg8 = boost::move(other.arg8); arg9 = boost::move(other.arg9); arg10 = boost::move(other.arg10); arg11 = boost::move(other.arg11); arg12 = boost::move(other.arg12); arg13 = boost::move(other.arg13); arg14 = boost::move(other.arg14); arg15 = boost::move(other.arg15); arg16 = boost::move(other.arg16);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7; Arg8 arg8; Arg9 arg9; Arg10 arg10; Arg11 arg11; Arg12 arg12; Arg13 arg13; Arg14 arg14; Arg15 arg15; Arg16 arg16;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15 , typename Arg16
        >
        typename detail::bound_action17<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15 , Arg16
        >::result_type
        eval(
            Env & env
          , detail::bound_action17<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15 , Arg16
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action17<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15 , Arg16
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16
    >
    detail::bound_action17<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type , typename boost::remove_const< typename detail::remove_reference<A16>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16
    )
    {
        return
            detail::bound_action17<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type , typename boost::remove_const< typename detail::remove_reference<A16>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16
    >
    detail::bound_action17<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type , typename boost::remove_const< typename detail::remove_reference<A16>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16
    )
    {
        return
            detail::bound_action17<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type , typename boost::remove_const< typename detail::remove_reference<A16>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15 , typename Arg16
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action17<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15 , Arg16
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12; ar & bound.arg13; ar & bound.arg14; ar & bound.arg15; ar & bound.arg16;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15 , typename Arg16
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action17<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15 , Arg16
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12; ar & bound.arg13; ar & bound.arg14; ar & bound.arg15; ar & bound.arg16;
    }
}}
namespace hpx { namespace util
{
    
    
    namespace detail
    {
        template <
            typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15 , typename Arg16 , typename Arg17
        >
        struct bound_action18
        {
            typedef typename traits::promise_local_result<
                typename hpx::actions::extract_action<Action>::result_type
            >::type result_type;
            
            bound_action18()
            {}
            template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
            bound_action18(
                BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17
            )
                : arg0(boost::forward<A0>(a0)) , arg1(boost::forward<A1>(a1)) , arg2(boost::forward<A2>(a2)) , arg3(boost::forward<A3>(a3)) , arg4(boost::forward<A4>(a4)) , arg5(boost::forward<A5>(a5)) , arg6(boost::forward<A6>(a6)) , arg7(boost::forward<A7>(a7)) , arg8(boost::forward<A8>(a8)) , arg9(boost::forward<A9>(a9)) , arg10(boost::forward<A10>(a10)) , arg11(boost::forward<A11>(a11)) , arg12(boost::forward<A12>(a12)) , arg13(boost::forward<A13>(a13)) , arg14(boost::forward<A14>(a14)) , arg15(boost::forward<A15>(a15)) , arg16(boost::forward<A16>(a16)) , arg17(boost::forward<A17>(a17))
            {}
            bound_action18(
                    bound_action18 const & other)
                : arg0(other.arg0) , arg1(other.arg1) , arg2(other.arg2) , arg3(other.arg3) , arg4(other.arg4) , arg5(other.arg5) , arg6(other.arg6) , arg7(other.arg7) , arg8(other.arg8) , arg9(other.arg9) , arg10(other.arg10) , arg11(other.arg11) , arg12(other.arg12) , arg13(other.arg13) , arg14(other.arg14) , arg15(other.arg15) , arg16(other.arg16) , arg17(other.arg17)
            {}
            bound_action18(BOOST_RV_REF(
                    bound_action18) other)
                : arg0(boost::move(other.arg0)) , arg1(boost::move(other.arg1)) , arg2(boost::move(other.arg2)) , arg3(boost::move(other.arg3)) , arg4(boost::move(other.arg4)) , arg5(boost::move(other.arg5)) , arg6(boost::move(other.arg6)) , arg7(boost::move(other.arg7)) , arg8(boost::move(other.arg8)) , arg9(boost::move(other.arg9)) , arg10(boost::move(other.arg10)) , arg11(boost::move(other.arg11)) , arg12(boost::move(other.arg12)) , arg13(boost::move(other.arg13)) , arg14(boost::move(other.arg14)) , arg15(boost::move(other.arg15)) , arg16(boost::move(other.arg16)) , arg17(boost::move(other.arg17))
            {}
            bound_action18 & operator=(
                BOOST_COPY_ASSIGN_REF(bound_action18) other)
            {
                arg0 = other.arg0; arg1 = other.arg1; arg2 = other.arg2; arg3 = other.arg3; arg4 = other.arg4; arg5 = other.arg5; arg6 = other.arg6; arg7 = other.arg7; arg8 = other.arg8; arg9 = other.arg9; arg10 = other.arg10; arg11 = other.arg11; arg12 = other.arg12; arg13 = other.arg13; arg14 = other.arg14; arg15 = other.arg15; arg16 = other.arg16; arg17 = other.arg17;
                return *this;
            }
            bound_action18 & operator=(
                BOOST_RV_REF(bound_action18) other)
            {
                arg0 = boost::move(other.arg0); arg1 = boost::move(other.arg1); arg2 = boost::move(other.arg2); arg3 = boost::move(other.arg3); arg4 = boost::move(other.arg4); arg5 = boost::move(other.arg5); arg6 = boost::move(other.arg6); arg7 = boost::move(other.arg7); arg8 = boost::move(other.arg8); arg9 = boost::move(other.arg9); arg10 = boost::move(other.arg10); arg11 = boost::move(other.arg11); arg12 = boost::move(other.arg12); arg13 = boost::move(other.arg13); arg14 = boost::move(other.arg14); arg15 = boost::move(other.arg15); arg16 = boost::move(other.arg16); arg17 = boost::move(other.arg17);
                return *this;
            }
            
            bool apply()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17));
            }
            bool apply() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::apply<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17));
            }
            template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0> bool apply(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> bool apply(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::apply<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); }
            
            
            hpx::lcos::future<result_type> async()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17));
            }
            hpx::lcos::future<result_type> async() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17));
            }
            template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0) const { typedef hpx::util::tuple1< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type > env_type; env_type env(boost::forward<A0>( a0 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const { typedef hpx::util::tuple2< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const { typedef hpx::util::tuple3< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const { typedef hpx::util::tuple4< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const { typedef hpx::util::tuple5< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const { typedef hpx::util::tuple6< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const { typedef hpx::util::tuple7< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const { typedef hpx::util::tuple8< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const { typedef hpx::util::tuple9< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const { typedef hpx::util::tuple10< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const { typedef hpx::util::tuple11< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const { typedef hpx::util::tuple12< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const { typedef hpx::util::tuple13< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const { typedef hpx::util::tuple14< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const { typedef hpx::util::tuple15< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const { typedef hpx::util::tuple16< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); } template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16> hpx::lcos::future<result_type> async(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const { typedef hpx::util::tuple17< typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type > env_type; env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 )); return hpx::async<Action>( hpx::util::detail::eval(env, arg0) , hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)); }
            
            BOOST_FORCEINLINE result_type operator()()
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
            }
            BOOST_FORCEINLINE result_type operator()() const
            {
                typedef hpx::util::tuple0<> env_type;
                env_type env;
                return hpx::async<Action>(
                    hpx::util::detail::eval(env, arg0)
                  ,
                        hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
            }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0)
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0) const
    {
        typedef
            hpx::util::tuple1<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1)
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1) const
    {
        typedef
            hpx::util::tuple2<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2)
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2) const
    {
        typedef
            hpx::util::tuple3<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3)
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3) const
    {
        typedef
            hpx::util::tuple4<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4)
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4) const
    {
        typedef
            hpx::util::tuple5<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5)
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5) const
    {
        typedef
            hpx::util::tuple6<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6)
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6) const
    {
        typedef
            hpx::util::tuple7<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7)
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7) const
    {
        typedef
            hpx::util::tuple8<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8)
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8) const
    {
        typedef
            hpx::util::tuple9<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9)
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9) const
    {
        typedef
            hpx::util::tuple10<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10)
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10) const
    {
        typedef
            hpx::util::tuple11<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11)
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11) const
    {
        typedef
            hpx::util::tuple12<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12)
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12) const
    {
        typedef
            hpx::util::tuple13<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13)
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13) const
    {
        typedef
            hpx::util::tuple14<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14)
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14) const
    {
        typedef
            hpx::util::tuple15<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15)
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15) const
    {
        typedef
            hpx::util::tuple16<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16)
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16) const
    {
        typedef
            hpx::util::tuple17<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17)
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
    template <typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17>
    BOOST_FORCEINLINE result_type operator()(BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17) const
    {
        typedef
            hpx::util::tuple18<
                typename detail::env_value_type<BOOST_FWD_REF(A0)>::type , typename detail::env_value_type<BOOST_FWD_REF(A1)>::type , typename detail::env_value_type<BOOST_FWD_REF(A2)>::type , typename detail::env_value_type<BOOST_FWD_REF(A3)>::type , typename detail::env_value_type<BOOST_FWD_REF(A4)>::type , typename detail::env_value_type<BOOST_FWD_REF(A5)>::type , typename detail::env_value_type<BOOST_FWD_REF(A6)>::type , typename detail::env_value_type<BOOST_FWD_REF(A7)>::type , typename detail::env_value_type<BOOST_FWD_REF(A8)>::type , typename detail::env_value_type<BOOST_FWD_REF(A9)>::type , typename detail::env_value_type<BOOST_FWD_REF(A10)>::type , typename detail::env_value_type<BOOST_FWD_REF(A11)>::type , typename detail::env_value_type<BOOST_FWD_REF(A12)>::type , typename detail::env_value_type<BOOST_FWD_REF(A13)>::type , typename detail::env_value_type<BOOST_FWD_REF(A14)>::type , typename detail::env_value_type<BOOST_FWD_REF(A15)>::type , typename detail::env_value_type<BOOST_FWD_REF(A16)>::type , typename detail::env_value_type<BOOST_FWD_REF(A17)>::type
            >
            env_type;
        env_type env(boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
        return hpx::async<Action>(
            hpx::util::detail::eval(env, arg0)
          ,
                hpx::util::detail::eval(env, arg1) , hpx::util::detail::eval(env, arg2) , hpx::util::detail::eval(env, arg3) , hpx::util::detail::eval(env, arg4) , hpx::util::detail::eval(env, arg5) , hpx::util::detail::eval(env, arg6) , hpx::util::detail::eval(env, arg7) , hpx::util::detail::eval(env, arg8) , hpx::util::detail::eval(env, arg9) , hpx::util::detail::eval(env, arg10) , hpx::util::detail::eval(env, arg11) , hpx::util::detail::eval(env, arg12) , hpx::util::detail::eval(env, arg13) , hpx::util::detail::eval(env, arg14) , hpx::util::detail::eval(env, arg15) , hpx::util::detail::eval(env, arg16) , hpx::util::detail::eval(env, arg17)).get();
    }
            Arg0 arg0; Arg1 arg1; Arg2 arg2; Arg3 arg3; Arg4 arg4; Arg5 arg5; Arg6 arg6; Arg7 arg7; Arg8 arg8; Arg9 arg9; Arg10 arg10; Arg11 arg11; Arg12 arg12; Arg13 arg13; Arg14 arg14; Arg15 arg15; Arg16 arg16; Arg17 arg17;
        };
        
        template <
            typename Env
          , typename Action
          , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15 , typename Arg16 , typename Arg17
        >
        typename detail::bound_action18<
                Action , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15 , Arg16 , Arg17
        >::result_type
        eval(
            Env & env
          , detail::bound_action18<
                Action
              , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15 , Arg16 , Arg17
            > const & f
        )
        {
            return
                boost::fusion::fused<
                    detail::bound_action18<
                        Action
                      , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15 , Arg16 , Arg17
                    >
                >(f)(
                    env
                 );
        }
    }
    
    template <
        typename Action
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17
    >
    detail::bound_action18<
        Action
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type , typename boost::remove_const< typename detail::remove_reference<A16>::type>::type , typename boost::remove_const< typename detail::remove_reference<A17>::type>::type
    >
    bind(
        BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17
    )
    {
        return
            detail::bound_action18<
                Action
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type , typename boost::remove_const< typename detail::remove_reference<A16>::type>::type , typename boost::remove_const< typename detail::remove_reference<A17>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
    }
    
    template <typename Component, typename Result,
        typename Arguments, typename Derived
      , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 , typename A11 , typename A12 , typename A13 , typename A14 , typename A15 , typename A16 , typename A17
    >
    detail::bound_action18<
        Derived
      , typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type , typename boost::remove_const< typename detail::remove_reference<A16>::type>::type , typename boost::remove_const< typename detail::remove_reference<A17>::type>::type
    >
    bind(
        hpx::actions::action<
            Component, Result, Arguments, Derived
        > 
      , BOOST_FWD_REF(A0) a0 , BOOST_FWD_REF(A1) a1 , BOOST_FWD_REF(A2) a2 , BOOST_FWD_REF(A3) a3 , BOOST_FWD_REF(A4) a4 , BOOST_FWD_REF(A5) a5 , BOOST_FWD_REF(A6) a6 , BOOST_FWD_REF(A7) a7 , BOOST_FWD_REF(A8) a8 , BOOST_FWD_REF(A9) a9 , BOOST_FWD_REF(A10) a10 , BOOST_FWD_REF(A11) a11 , BOOST_FWD_REF(A12) a12 , BOOST_FWD_REF(A13) a13 , BOOST_FWD_REF(A14) a14 , BOOST_FWD_REF(A15) a15 , BOOST_FWD_REF(A16) a16 , BOOST_FWD_REF(A17) a17
    )
    {
        return
            detail::bound_action18<
                Derived
              ,
                  typename boost::remove_const< typename detail::remove_reference<A0>::type>::type , typename boost::remove_const< typename detail::remove_reference<A1>::type>::type , typename boost::remove_const< typename detail::remove_reference<A2>::type>::type , typename boost::remove_const< typename detail::remove_reference<A3>::type>::type , typename boost::remove_const< typename detail::remove_reference<A4>::type>::type , typename boost::remove_const< typename detail::remove_reference<A5>::type>::type , typename boost::remove_const< typename detail::remove_reference<A6>::type>::type , typename boost::remove_const< typename detail::remove_reference<A7>::type>::type , typename boost::remove_const< typename detail::remove_reference<A8>::type>::type , typename boost::remove_const< typename detail::remove_reference<A9>::type>::type , typename boost::remove_const< typename detail::remove_reference<A10>::type>::type , typename boost::remove_const< typename detail::remove_reference<A11>::type>::type , typename boost::remove_const< typename detail::remove_reference<A12>::type>::type , typename boost::remove_const< typename detail::remove_reference<A13>::type>::type , typename boost::remove_const< typename detail::remove_reference<A14>::type>::type , typename boost::remove_const< typename detail::remove_reference<A15>::type>::type , typename boost::remove_const< typename detail::remove_reference<A16>::type>::type , typename boost::remove_const< typename detail::remove_reference<A17>::type>::type
            > (boost::forward<A0>( a0 ) , boost::forward<A1>( a1 ) , boost::forward<A2>( a2 ) , boost::forward<A3>( a3 ) , boost::forward<A4>( a4 ) , boost::forward<A5>( a5 ) , boost::forward<A6>( a6 ) , boost::forward<A7>( a7 ) , boost::forward<A8>( a8 ) , boost::forward<A9>( a9 ) , boost::forward<A10>( a10 ) , boost::forward<A11>( a11 ) , boost::forward<A12>( a12 ) , boost::forward<A13>( a13 ) , boost::forward<A14>( a14 ) , boost::forward<A15>( a15 ) , boost::forward<A16>( a16 ) , boost::forward<A17>( a17 ));
    }
}}
namespace boost { namespace serialization
{
    
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15 , typename Arg16 , typename Arg17
    >
    void serialize(hpx::util::portable_binary_iarchive& ar
      , hpx::util::detail::bound_action18<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15 , Arg16 , Arg17
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12; ar & bound.arg13; ar & bound.arg14; ar & bound.arg15; ar & bound.arg16; ar & bound.arg17;
    }
    template <
        typename Action
      , typename Arg0 , typename Arg1 , typename Arg2 , typename Arg3 , typename Arg4 , typename Arg5 , typename Arg6 , typename Arg7 , typename Arg8 , typename Arg9 , typename Arg10 , typename Arg11 , typename Arg12 , typename Arg13 , typename Arg14 , typename Arg15 , typename Arg16 , typename Arg17
    >
    void serialize(hpx::util::portable_binary_oarchive& ar
      , hpx::util::detail::bound_action18<
            Action
          , Arg0 , Arg1 , Arg2 , Arg3 , Arg4 , Arg5 , Arg6 , Arg7 , Arg8 , Arg9 , Arg10 , Arg11 , Arg12 , Arg13 , Arg14 , Arg15 , Arg16 , Arg17
        >& bound
      , unsigned int const)
    {
        ar & bound.arg0; ar & bound.arg1; ar & bound.arg2; ar & bound.arg3; ar & bound.arg4; ar & bound.arg5; ar & bound.arg6; ar & bound.arg7; ar & bound.arg8; ar & bound.arg9; ar & bound.arg10; ar & bound.arg11; ar & bound.arg12; ar & bound.arg13; ar & bound.arg14; ar & bound.arg15; ar & bound.arg16; ar & bound.arg17;
    }
}}
