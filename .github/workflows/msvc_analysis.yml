# Copyright (c) 2024 The STE||AR Group
#
# SPDX-License-Identifier: BSL-1.0
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

name: Microsoft C++ Code Analysis

on:
  push:
    branches: [ "master", "release**" ]
  pull_request:
    branches: [ "master" ]
#  schedule:
#    - cron: '36 12 * * 4'

env:
  # Path to the CMake build directory.
  build: 'build'

permissions:
  contents: read

jobs:
  analyze:
    permissions:
      contents: read            # for actions/checkout to fetch code
      security-events: write    # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read             # only required for a private repository by github/codeql-action/upload-sarif
                                # to get the Action run status
    name: Analyze
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Configure CMake
        shell: bash
        run: |
            cmake . -B ${{ env.build }} \
              -DCMAKE_BUILD_TYPE=Release \
              -DHPX_WITH_MALLOC=system \
              -DHPX_WITH_FETCH_ASIO=ON \
              -DHPX_WITH_FETCH_BOOST=ON \
              -DHPX_WITH_FETCH_HWLOC=ON \
              -DHPX_WITH_EXAMPLES=OFF \
              -DHPX_WITH_TESTS=OFF

      - name: Initialize MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@v0.1.1
        # Provide a unique ID to access the sarif output path
        id: run-analysis
        with:
          cmakeBuildDirectory: ${{ env.build }}
          buildConfiguration: Release
          # Ruleset file that will determine what checks will be run
          ruleset: NativeRecommendedRules.ruleset
          ignoredPaths:  ${{ env.build }}

      # Upload SARIF file to GitHub Code Scanning Alerts
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.run-analysis.outputs.sarif }}

#      # Upload SARIF file as an Artifact to download and view
#      - name: Upload SARIF as an Artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: sarif-file
#          path: ${{ steps.run-analysis.outputs.sarif }}
