# Copyright (c) 2020 Mikael Simberg
#
# SPDX-License-Identifier: BSL-1.0
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

name: macOS CI (Debug)

on: [pull_request]

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        # Workaround for https://github.com/actions/virtual-environments/issues/2322
        rm -rf /usr/local/bin/2to3
        brew upgrade
        brew update && \
            brew install boost hwloc gperftools ninja && \
            brew upgrade cmake
    - name: Configure
      shell: bash
      run: |
          cmake \
              -H. \
              -Bbuild \
              -GNinja \
              -DCMAKE_BUILD_TYPE=Debug \
              -DHPXLocal_WITH_UNITY_BUILD=system \
              -DHPXLocal_WITH_FETCH_ASIO=ON \
              -DHPXLocal_WITH_EXAMPLES=ON \
              -DHPXLocal_WITH_TESTS=ON \
              -DHPXLocal_WITH_TESTS_MAX_THREADS_PER_LOCALITY=2 \
              -DHPXLocal_WITH_CHECK_MODULE_DEPENDENCIES=On
    - name: Build
      shell: bash
      run: |
          cmake --build build --target all
          cmake --build build --target tests
    - name: Test
      shell: bash
      run: |
          cd build
          ctest --output-on-failure \
            --exclude-regex \
          "tests.regressions.modules.compute.parallel_fill_4132|\
          tests.unit.modules.algorithms.default_construct|\
          tests.unit.modules.algorithms.destroy|\
          tests.unit.modules.algorithms.foreach_executors|\
          tests.unit.modules.algorithms.max_element|\
          tests.unit.modules.algorithms.replace_copy_if|\
          tests.unit.modules.compute.numa_allocator|\
          tests.unit.modules.execution.standalone_thread_pool_executor|\
          tests.unit.modules.resource_partitioner.used_pus|\
          tests.unit.threads.distributed.tcp.thread_stacksize|\
          tests.unit.topology.numa_allocator"
