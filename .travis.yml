language: cpp

compiler:
    #- gcc
    - clang

env:
    - BUILD_TYPE=Debug BUILD_CORES=1
    - BUILD_TYPE=Release BUILD_CORES=2
    
branches:
    only:
        - master
        - release

before_install:
    # more recent gcc
    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    # more recent clang
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-add-repository 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.5 main'
    # more recent cmake
    - sudo add-apt-repository -y ppa:kalakris/cmake
    # more recent boost
    - sudo add-apt-repository -y ppa:boost-latest/ppa
    - sudo apt-get update -qq
    - sudo apt-get install -qq --force-yes cmake
    - sudo apt-get install -qq --force-yes libboost1.55-all-dev
    - sudo apt-get install -qq --force-yes libjemalloc-dev
    - sudo apt-get install -qq --force-yes libhwloc-dev
    # update clang
    - if [ "$CXX" = "clang++" ]; then sudo apt-get install -y --force-yes clang-3.5 libstdc++-4.8-dev; fi
    - if [ "$CXX" = "clang++" ]; then sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.5 1; fi
    - if [ "$CXX" = "clang++" ]; then sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.5 1; fi
    - if [ "$CXX" = "clang++" ]; then sudo rm /usr/local/clang-3.4/bin/clang++; fi
    - if [ "$CXX" = "clang++" ]; then sudo rm /usr/local/clang-3.4/bin/clang; fi
    # update gcc
    - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq --force-yes libstdc++-4.9-dev g++-4.9; fi
    - if [ "$CXX" = "g++" ]; then export CXX="g++-4.9" CC="gcc-4.9"; fi

before_script:
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DHPX_MALLOC=jemalloc -DCMAKE_INSTALL_PREFIX:PATH=${PWD}/../ -DHPX_BUILD_EXAMPLES=Off
    - make core -j ${BUILD_CORES}
    - make -k components -j ${BUILD_CORES}
    #- make -k examples -j ${BUILD_CORES}
    #- make -k tests.unit -j ${BUILD_CORES}
    #- make -k tests.regressions -j ${BUILD_CORES}
    #- make -k tests.performance -j ${BUILD_CORES}
    - make install

script:
    - echo "Done!"
    
notifications:
    email: false
