..
   Copyright (C) 2018 Mikael Simberg
   Copyright (C) 2014 Thomas Heller

   SPDX-License-Identifier: BSL-1.0
   Distributed under the Boost Software License, Version 1.0. (See accompanying
   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

..
   This file has been automatically generated using the CMake tool.
   Do not edit manually.

.. _cmake_variables:

|cmake| variables used to configure |hpx|
=========================================

In order to configure |hpx|, you can set a variety of options to allow CMake to
generate your specific makefiles/project files.

.. _configure:

Variables that influence how |hpx| is built
-------------------------------------------

The options are split into these categories:

@HPX_CMAKE_OPTIONS_RST@

.. _cmake_additional_tools:

Additional tools and libraries used by |hpx|
--------------------------------------------

Here is a list of additional libraries and tools that are either optionally
supported by the build system or are optionally required for certain examples or
tests. These libraries and tools can be detected by the |hpx| build system.

Each of the tools or libraries listed here will be automatically detected if
they are installed in some standard location. If a tool or library is installed
in a different location, you can specify its base directory by appending
``_ROOT`` to the variable name as listed below. For instance, to configure a
custom directory for ``BOOST``, specify ``BOOST_ROOT=/custom/boost/root``.

.. option:: BOOST_ROOT:PATH

   Specifies where to look for the Boost installation to be used for
   compiling |hpx|. Set this if CMake is not able to locate a suitable version of
   Boost. The directory specified here can be either the root of an installed
   Boost distribution or the directory where you unpacked and built Boost
   without installing it (with staged libraries).

.. option:: HWLOC_ROOT:PATH

   Specifies where to look for the hwloc library. Set this if CMake is not
   able to locate a suitable version of hwloc. Hwloc provides platform-
   independent support for extracting information about the used hardware
   architecture (number of cores, number of NUMA domains, hyperthreading, etc.).
   |hpx| utilizes this information if available.

.. option:: PAPI_ROOT:PATH

   Specifies where to look for the PAPI library. The PAPI library is
   needed to compile a special component exposing PAPI hardware events and
   counters as |hpx| performance counters. This is not available on the Windows
   platform.

.. option:: AMPLIFIER_ROOT:PATH

   Specifies where to look for one of the tools of the Intel Parallel Studio
   product, either Intel Amplifier or Intel Inspector. This should be
   set if the CMake variable ``HPX_USE_ITT_NOTIFY`` is set to ``ON``. Enabling
   ITT support in |hpx| will integrate any application with the mentioned Intel
   tools, which customizes the generated information for your application and
   improves the generated diagnostics.

In addition, some of the examples may need the following variables:

.. option:: HDF5_ROOT:PATH

   Specifies where to look for the |hdf5| include files and libraries.
