# -*- coding: utf-8 -*-
#
# Copyright (c) 2020-@HPX_COPYRIGHT_YEAR@ STE||AR Group
# Copyright (c) 2018 Mikael Simberg
#
# SPDX-License-Identifier: BSL-1.0
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# HPX documentation build configuration file, created by
# sphinx-quickstart on Wed Feb 21 16:49:42 2018.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import os
import re
import sys
import traceback
from datetime import datetime

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#sys.path.insert(0, os.path.abspath('.'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Make our custom HPX extension visible.
sys.path.insert(0, os.path.abspath('.') + '/extensions')

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinxcontrib.bibtex',
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.ifconfig',
    'sphinx.ext.viewcode',
    'breathe',
    'sphinx-hpx', # Custom HPX roles
    'sphinx_copybutton',
]

breathe_projects = { "hpx": "../hpx_autodoc" }
breathe_projects_source = {}

hpx_source_dir = '@HPX_SOURCE_DIR@'
hpx_libs_dir = hpx_source_dir + '/libs'
hpx_libs = {}
header_info = {}

def get_info_from_file(source):
    title = "None"
    header = "None"

    if os.path.exists(source):
        with open(source, 'r') as file:
            # Search for patterns indicating the title and header
            for line in file:
                if "/// \\page" in line:
                    title = line.split("/// \\page", 1)[-1].strip()
                elif "/// \\headerfile" in line:
                    header = line.split("/// \\headerfile", 1)[-1].strip()

    return title, header

# Dictionary including the hpx headers with their base path
# needed to link to the hpx header files themselves.
# Links generated by docs/sphinx/extensions/sphinx-hpx.py
# The text in the rst file should be:
# :hpx-header:`base_path,file_name`
link_hpx_headers = {
    "libs/full/include/include": [
        "hpx/algorithm.hpp",
        "hpx/barrier.hpp",
        "hpx/channel.hpp",
        "hpx/future.hpp",
        "hpx/latch.hpp",
        "hpx/runtime.hpp"
    ],
    "libs/core/include_local/include": [
        "hpx/any.hpp",
        "hpx/chrono.hpp",
        "hpx/condition_variable.hpp",
        "hpx/exception.hpp",
        "hpx/execution.hpp",
        "hpx/functional.hpp",
        "hpx/mutex.hpp",
        "hpx/memory.hpp",
        "hpx/numeric.hpp",
        "hpx/optional.hpp",
        "hpx/source_location.hpp",
        "hpx/system_error.hpp",
        "hpx/task_block.hpp",
        "hpx/experimental/task_group.hpp",
        "hpx/thread.hpp",
        "hpx/semaphore.hpp",
        "hpx/shared_mutex.hpp",
        "hpx/stop_token.hpp",
        "hpx/tuple.hpp",
        "hpx/type_traits.hpp",
        "hpx/unwrap.hpp"
    ],
    "libs/full/init_runtime/include": ["hpx/init.hpp"],
    "libs/core/version/include": ["hpx/version.hpp"],
    "wrap/include": ["hpx/wrap_main.hpp"]
}

def find_link_hpx_header(include_header):

    for base_path, header_list in link_hpx_headers.items():
        if include_header in header_list:
            header_link = f":hpx-header:`{base_path},{include_header}`"
            break
        else:
            header_link = include_header
    return header_link

# Scan the libs directory for source files to be included in
# the documentation
file_regex = re.compile(r'.*\.(h|hxx|hpp|ipp)$')
for lib_dir in os.listdir(hpx_libs_dir):
    # Only process subdirectories
    if not os.path.isdir(os.path.join(hpx_libs_dir, lib_dir)) or lib_dir == 'src':
        continue

    hpx_libs[lib_dir] = []

    full_lib_dir = os.path.join(hpx_libs_dir, lib_dir)
    for subdir_full, dirs, files in os.walk(full_lib_dir):
        # strip the prefix of the directory...
        subdir = subdir_full[len(full_lib_dir) + 1:]

        # If we are in the root of the library dir, we add all
        # subdirectories as a new breathe project
        if len(subdir) == 0:
            for directory in dirs:
                breathe_projects_source[directory] = (subdir_full + '/' + directory, [])
                hpx_libs[lib_dir].append(directory)
        # We are inside a module and need to add the files
        # to the breathe project
        else:
            # We only scan the include subdir...
            if not '/include' in subdir:
                continue
            # ... but omit anything in detail and include_compatibility directories
            if '/detail' in subdir or '/include_compatibility' in subdir:
                continue

            # strip the name of the module... the base path is already
            # set
            subdirs = subdir.split('/')
            module = subdirs[0]
            subdir = '/'.join(subdirs[1:])
            # And now add all remaining files
            # which are headers or source files
            for f in files:
                if not file_regex.match(f) is None:
                    skip = True
                    header_file_path = subdir_full + '/' + f
                    try:
                        for line in open(header_file_path):
                            if '/// \\' in line:
                                page_title, include_header = get_info_from_file(header_file_path)
                                skip = False
                                break
                    except:
                        print('Exception while processing %s' % f)
                        print(traceback.format_exc())
                    if skip:
                        continue
                    breathe_projects_source[module][1].append(subdir + '/' + f)
                    include_prefix = 'include/'
                    include_index = header_file_path.find(include_prefix)
                    if include_index != -1:
                        header = header_file_path[include_index + len(include_prefix):]
                        header_info[header] = (page_title, include_header)

# Generate the rst files for the API documentation
api_refs = ''
api_ref_header = '''
..
    Copyright (C) 2019 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

.. _modules_{0}_api:

-------------------------------------------------------------------------------
{0}
-------------------------------------------------------------------------------

See :ref:`public_api` for a list of names and headers that are part of the public
|hpx| API.
'''

api_ref_file = '''

.. autodoxygenfile:: {0}
   :project: {1}
'''

api_header_file = '''
..
    Copyright (C) 2022 Dimitra Karatza

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

.. _modules_{0}_api:

-------------------------------------------------------------------------------
{2}
-------------------------------------------------------------------------------

Defined in header {3}.

See :ref:`public_api` for a list of names and headers that are part of the public
|hpx| API.

.. autodoxygenfile:: {0}
   :project: {1}
'''

api_file = '''

.. toctree::
   :maxdepth: 1

'''

for lib in hpx_libs.keys():
    for module in sorted(hpx_libs[lib]):
        assert module in breathe_projects_source.keys()
        module_sources = breathe_projects_source[module]
        if len(module_sources[1]) == 0:
            continue
        basedir = os.path.abspath('.') + '/libs/' + lib + '/' + module + '/api'
        if not os.path.exists(basedir):
            os.makedirs(basedir)
        module_api_ref = open(basedir + '/full_api.rst', 'w')
        module_api_ref.write(api_ref_header.format(module))
        header_refs = ''
        header_names = set()
        for source in module_sources[1]:
            header = source[len('include/'):]
            header_splitted = re.split('[/ .]',header)

            header_name = header_splitted[-2]
            # create a new, longer header name if current one already exists
            if header_name in header_names:
                header_name = '{0}_{1}'.format(header_splitted[-3], header_name)
            header_names.add(header_name)

            # Get the info from the dictionary using the header file path
            page_title, include_header = header_info.get(header, ("None", "None"))
            if page_title == "None":
                page_title = header
            if include_header == "None":
                include_header = header

            header_ref = open(basedir + '/' + header_name + '.rst', 'w')
            header_ref.write(api_header_file.format(header, module, page_title, find_link_hpx_header(include_header)))
            header_ref.close()
            header_refs += '   /libs/' + lib + '/' + module + '/api/' + header_name + '.rst\n'
        module_api_ref.write(api_file)
        module_api_ref.write(header_refs)
        module_api_ref.close()
        api_refs += '   /libs/' + lib + '/' + module + '/api/full_api.rst\n'

api_rst = open(os.path.abspath('.') + '/api/full_api.rst', 'w')
for line in open(hpx_source_dir + '/docs/sphinx/api/full_api.rst').readlines():
    api_rst.write(line.format(api_refs))
api_rst.close()

breathe_default_project = "hpx"

breathe_doxygen_config_options = {
    'EXPAND_ONLY_PREDEF': 'YES',
    'EXCLUDE_SYMBOLS': 'detail',
    'MACRO_EXPANSION': 'YES',
    'DIRECTORY_GRAPH': 'NO',
    'PREDEFINED': '@doxygen_definitions@',
    'STRIP_FROM_PATH': hpx_source_dir,
    'EXTRACT_PRIVATE': 'NO',
    'ALIASES': r'namedrequirement{1}="<a href=\"https://en.cppreference.com/w/cpp/named_req/\1\">\1</a>"'
}

# ! this should work but doesn't. check after updating breathe version.
# breathe_doxygen_aliases = {
# }

numfig = True
primary_domain = 'cpp'
highlight_language = 'cpp'

rst_prolog = ""

# General
rst_prolog += '''
.. |hpx| replace:: *HPX*
.. |hpx_compute| replace:: *HPX.Compute*
'''

# URLs
rst_prolog += '''
.. |stellar| replace:: STE||AR
.. _stellar: https://stellar-group.org
.. |stellar_list| replace:: hpx-users@stellar.cct.lsu.edu
.. _stellar_list: mailto:hpx-users@stellar.cct.lsu.edu
.. |stellar_irc| replace:: #ste||ar at Freenode
.. _stellar_irc: irc://irc.freenode.net:6667/#ste||ar
.. |cpplang_slack| replace:: Cpplang Slack
.. _cpplang_slack: https://cpplang.slack.com
.. |stellar_hpx_download| replace:: |hpx| Downloads
.. _stellar_hpx_download: https://hpx.stellar-group.org/downloads/
.. |stellar_hpx_funding| replace:: |hpx| Funding Acknowledgements
.. _stellar_hpx_funding: https://hpx.stellar-group.org/funding-acknowledgements/
.. |stellar_hpx_users| replace:: |hpx| Users
.. _stellar_hpx_users: https://hpx.stellar-group.org/hpx-users/
.. |hpx_github| replace:: Github
.. _hpx_github: https://github.com/STEllAR-GROUP/hpx/
.. |hpx_github_issues| replace:: |hpx| Issues
.. _hpx_github_issues: https://github.com/STEllAR-GROUP/hpx/issues
.. |hpx_github_closed_issues| replace:: |hpx| Closed issues
.. _hpx_github_closed_issues: https://github.com/STEllAR-GROUP/hpx/issues?q=is%3Aissue+is%3Aclosed
.. |hpx_github_support| replace:: |hpx| Support
.. _hpx_github_support: https://github.com/STEllAR-GROUP/hpx/blob/master/.github/SUPPORT.md
.. |hpx_stackoverflow| replace:: StackOverflow |hpx| questions
.. _hpx_stackoverflow: https://stackoverflow.com/questions/tagged/hpx
.. |hpx_buildbot| replace:: |hpx| Buildbot Website
.. _hpx_buildbot: http://rostam.cct.lsu.edu/
.. |pycicle| replace:: pycicle
.. _pycicle: https://github.com/biddisco/pycicle/
.. |circleci| replace:: CircleCI
.. _circleci: https://circleci.com
.. |cdash| replace:: CDash
.. _cdash: https://www.kitware.com/cdash/project/about.html
.. |hpx_circleci| replace:: CircleCI HPX dashboard
.. _hpx_circleci: https://circleci.com/gh/STEllAR-GROUP/hpx
.. |hpx_cdash| replace:: CDash HPX dashboard
.. _hpx_cdash: https://cdash.rostam.cct.lsu.edu/index.php?project=HPX
.. |support| replace:: Support Website
.. _support: https://stellar.cct.lsu.edu/support/
.. |hpx_zenodo| image:: https://zenodo.org/badge/DOI/10.5281/zenodo.598202.svg
     :target: https://doi.org/10.5281/zenodo.598202
     :alt: Latest software release of HPX
.. |hpx_joss| image:: https://joss.theoj.org/papers/022e5917b95517dff20cd3742ab95eca/status.svg
    :target: https://joss.theoj.org/papers/022e5917b95517dff20cd3742ab95eca
    :alt: JOSS Paper about HPX
.. |hpx_dependency_report| replace:: |hpx| Dependency report
.. _hpx_dependency_report: ../../report/index.html
.. |hpx_single_html| replace:: |hpx| Single HTML documentation
.. _hpx_single_html: ../singlehtml/index.html
.. |hpx_pdf| replace:: |hpx| PDF documentation
.. _hpx_pdf: ../pdf/HPX.pdf

.. |hpxpi| replace:: HPXPI
.. _hpxpi: https://github.com/STEllAR-GROUP/hpxpi/
.. |xpi_spec| replace:: XPI specification
.. _xpi_spec: https://github.com/STEllAR-GROUP/hpxpi/blob/master/spec.pdf?raw=true
.. |hpxcl| replace:: HPXCL
.. _hpxcl: https://github.com/STEllAR-GROUP/hpxcl/

.. |lsu| replace:: Louisiana State University (LSU)
.. _lsu: https://www.lsu.edu
.. |cct| replace:: Center for Computation and Technology (CCT)
.. _cct: https://www.cct.lsu.edu
.. |fau| replace:: Friedrich-Alexander University Erlangen-Nuremberg (FAU)
.. _fau: https://www.fau.de
.. |inf3| replace:: Department of Computer Science 3 - Computer Architecture
.. _inf3: https://www3.cs.fau.de
.. |sandia| replace:: Sandia National Labs (Albuquerque)
.. _sandia: https://www.sandia.gov
.. |nmsu| replace:: New Mexico State University
.. _nmsu: https://www.nmsu.edu
.. |unlv| replace:: University of Nevada, Las Vegas
.. _unlv: https://www.unlv.edu
.. |cscs| replace:: Swiss National Supercomputing Centre
.. _cscs: https://www.cscs.ch
.. |ou| replace:: University of Oregon
.. _ou: https://uoregon.edu/
.. |lbnl| replace:: Lawrence Berkeley National Laboratory (LBNL)
.. _lbnl: https://www.lbl.gov/
.. |nvidia| replace:: NVIDIA
.. _nvidia: https://nvidia.com/
.. |tud| replace:: Delft University of Technology
.. _tud: https://www.tudelft.nl/en/
.. |tud_eemcs| replace:: Faculty of Electrical Engineering, Mathematics & Computer Science
.. _tud_eemcs: https://www.tudelft.nl/en/eemcs
.. |amd| replace:: AMD
.. _amd: https://www.amd.com/en
.. |psu| replace:: Paris-Saclay University
.. _psu: https://www.universite-paris-saclay.fr/en

.. |gsoc| replace:: Google Summer of Code
.. _gsoc: https://developers.google.com/open-source/soc/
.. |gsod| replace:: Google Season of Docs
.. _gsod: https://developers.google.com/season-of-docs

.. |boost| replace:: Boost
.. _boost: https://www.boost.org/
.. |boost_libraries| replace:: Boost C++ Libraries
.. _boost_libraries: https://www.boost.org/
.. |boost_tools| replace:: Boost Tools
.. _boost_tools: https://www.boost.org/tools/index.html
.. |boost_quickbook| replace:: QuickBook
.. _boost_quickbook: https://www.boost.org/doc/libs/release/doc/html/quickbook.html
.. |boost_auto_index| replace:: AutoIndex
.. _boost_auto_index: https://www.boost.org/doc/libs/release/tools/auto_index/doc/html/index.html
.. |boost_getting_started| replace:: Getting Started
.. _boost_getting_started: https://www.boost.org/doc/libs/release/more/getting_started/index.html
.. |boost_doc| replace:: Boost Documentation
.. _boost_doc: https://www.boost.org/doc/
.. |boost_downloads| replace:: Boost Downloads
.. _boost_downloads: https://www.boost.org/users/download/
.. |boost_license| replace:: Boost Software License
.. _boost_license: https://www.boost.org/LICENSE_1_0.txt
.. |boost_wave| replace:: Boost Wave
.. _boost_wave: https://www.boost.org/doc/libs/release/libs/wave/doc/wave_driver.html

.. |boost_program_options| replace:: Boost.Program_options
.. _boost_program_options: https://www.boost.org/doc/html/program_options.html
.. |boost_atomic| replace:: Boost.Atomic
.. _boost_atomic: https://www.boost.org/doc/libs/release/doc/html/atomic.html
.. |boost_serialization| replace:: Boost.Serialization
.. _boost_serialization: https://www.boost.org/doc/libs/release/libs/serialization/doc/index.html
.. |boost_asio| replace:: Boost.Asio
.. _boost_asio: https://www.boost.org/doc/libs/release/doc/html/boost_asio.html
.. |boost_smartptr| replace:: Boost.SmartPtr
.. _boost_smartptr: https://www.boost.org/doc/libs/release/libs/smart_ptr/doc/html/smart_ptr.html
.. |boost_string_algo| replace:: Boost String Algorithms Library
.. _boost_string_algo: https://www.boost.org/doc/libs/1_62_0/doc/html/string_algo.html

.. |hwloc_downloads| replace:: Hwloc Downloads
.. _hwloc_downloads: https://www.open-mpi.org/software/hwloc/v1.11
.. |hwloc_doc| replace:: Hwloc Documentation
.. _hwloc_doc: https://www.open-mpi.org/projects/hwloc/doc/

.. |doxygen| replace:: Doxygen
.. _doxygen: https://www.doxygen.org
.. |python| replace:: Python
.. _python: https://www.python.org
.. |sphinx| replace:: Sphinx
.. _sphinx: http://www.sphinx-doc.org
.. |breathe| replace:: Breathe
.. _breathe: https://breathe.readthedocs.io/en/latest

.. |macports| replace:: MacPorts
.. _macports: https://www.macports.org/

.. |apex| replace:: APEX
.. _apex: http://uo-oaciss.github.io/apex
.. |apex_hpx_doc| replace:: APEX |hpx| documentation
.. _apex_hpx_doc: https://uo-oaciss.github.io/apex/usage/#hpx-louisiana-state-university
.. |tau| replace:: TAU
.. _tau: https://www.cs.uoregon.edu/research/tau/home.php
.. |cmake| replace:: CMake
.. _cmake: https://www.cmake.org
.. |cppdependencies| replace:: cpp-dependencies
.. _cppdependencies: https://github.com/tomtom-international/cpp-dependencies
.. |ctest| replace:: CTest
.. _ctest: https://gitlab.kitware.com/cmake/community/wikis/doc/ctest/Testing-With-CTest
.. |ctest_doc| replace:: CTest Documentation
.. _ctest_doc: https://www.cmake.org/cmake/help/latest/manual/ctest.1.html
.. |cmake_download| replace:: CMake Downloads
.. _cmake_download: https://www.cmake.org/cmake/resources/software.html
.. |docker| replace:: Docker
.. _docker: https://www.docker.com
.. |docker_docs| replace:: Docker Documentation
.. _docker_docs: https://docs.docker.com/
.. |docker_docs_bind_mounts| replace:: Docker Documentation (Bind mounts)
.. _docker_docs_bind_mounts: https://docs.docker.com/storage/bind-mounts/
.. |docker_build_env| replace:: Docker Hub
.. _docker_build_env: https://hub.docker.com/r/stellargroup/build_env/
.. |eve| replace:: EVE - the Expressive Vector Engine
.. _eve: https://github.com/jfalcou/eve
.. |gcc| replace:: GNU Compiler Collection (g++)
.. _gcc: https://gcc.gnu.org
.. |clang| replace:: clang: a C language family frontend for LLVM
.. _clang: https://clang.llvm.org/
.. |icpc| replace:: Intel Composer XE Suites
.. _icpc: https://software.intel.com/en-us/intel-composer-xe/
.. |gmake| replace:: GNU Make (gmake)
.. _gmake: https://www.gnu.org/software/make
.. |eglibc| replace:: Embedded GLIBC (EGLIBC)
.. _eglibc: https://eglibc.org/home
.. |glibc| replace:: GNU C Library (GLIBC)
.. _glibc: https://gnu.org/s/libc
.. |libstdcxx| replace:: GNU Standard C++ Library
.. _libstdcxx: https://gcc.gnu.org/libstdc++
.. |rnpl| replace:: RNPL
.. _rnpl: https://relativity.phys.lsu.edu/postdocs/matt/software.html
.. |google_perftools| replace:: google-perftools
.. _google_perftools: https://code.google.com/p/gperftools
.. |visual_cxx| replace:: Visual C++
.. _visual_cxx: https://msdn.microsoft.com/en-us/visualc/default.aspx
.. |jemalloc| replace:: jemalloc
.. _jemalloc: http://jemalloc.net
.. |mimalloc| replace:: mi-malloc
.. _mimalloc: http://microsoft.github.io/mimalloc/
.. |libunwind| replace:: libunwind
.. _libunwind: https://www.nongnu.org/libunwind
.. |hdf5| replace:: Hierarchical Data Format V5 (HDF5)
.. _hdf5: https://www.hdfgroup.org/HDF5
.. |lorene| replace:: LORENE
.. _lorene: https://www.lorene.obspm.fr
.. |papi| replace:: Performance Application Programming Interface (PAPI)
.. _papi: https://icl.cs.utk.edu/papi/
.. |sodium| replace:: Networking and Cryptography library (NaCl)
.. _sodium: https://nacl.cr.yp.to/
.. |lapack| replace:: Linear Algebra PACKage (LAPACK)
.. _lapack: https://math-atlas.sourceforge.net/
.. |blas| replace:: Basic Linear Algebra Subroutines 3 (BLAS)
.. _blas: https://math-atlas.sourceforge.net/
.. |gsl| replace:: GNU Scientific Library (GSL)
.. _gsl: https://www.gnu.org/software/gsl/
.. |zlib| replace:: ZLib
.. _zlib: https://www.zlib.net/
.. |bzip2| replace:: BZip2
.. _bzip2: https://www.bzip.org/
.. |snappy| replace:: Snappy
.. _snappy: https://code.google.com/p/snappy/
.. |qsub| replace:: qsub
.. _qsub: https://www.clusterresources.com/torquedocs21/commands/qsub.shtml
.. |qstat| replace:: qstat
.. _qstat: https://www.clusterresources.com/torquedocs21/commands/qstat.shtml
.. |pbsdsh| replace:: pbsdsh
.. _pbsdsh: https://www.clusterresources.com/torquedocs21/commands/pbsdsh.shtml
.. _pgas: https://www.pgas.org/
.. _apgas: https://researcher.ibm.com/researcher/files/us-groved/amp2010.pdf
.. |slurm| replace:: SLURM
.. _slurm: https://slurm.net/
.. |srun| replace:: srun
.. _srun: https://slurm.schedmd.com/srun.html
.. |sbatch| replace:: sbatch
.. _sbatch: https://slurm.schedmd.com/sbatch.html
.. |linda| replace:: The Linda Coordination Language
.. _linda: https://en.wikipedia.org/wiki/Linda_(coordination_language)
.. |opencl| replace:: OpenCL
.. _opencl: https://www.khronos.org/opencl/
.. |openmpi| replace:: Open MPI
.. _openmpi: https://www.open-mpi.org
.. |pocl| replace:: POCL
.. _pocl: https://portablecl.org/
.. |cuda| replace:: CUDA
.. _cuda: https://www.nvidia.com/object/cuda_home_new.html
.. |nt2| replace:: NT2
.. _nt2: https://www.numscale.com/nt2/
.. |lgd| replace:: LibGeoDecomp
.. _lgd: https://www.libgeodecomp.org/
.. |conan| replace:: Conan
.. _conan: https://www.conan.io/
.. |vc| replace:: Vc Library
.. _vc: https://github.com/VcDevel/Vc
.. |sycl| replace:: SYCL
.. _sycl: https://en.wikipedia.org/wiki/SYCL

.. |cpp11| replace:: C++11 Standard
.. _cpp11: http://www.open-std.org/jtc1/sc22/wg21
.. |cpp17| replace:: C++17 Standard
.. _cpp17: http://www.open-std.org/jtc1/sc22/wg21
.. |cpp11_n3632| replace:: N3632
.. _cpp11_n3632: http://wg21.link/n3632
.. |cpp11_n3634| replace:: N3857
.. _cpp11_n3634: http://wg21.link/n3857
.. |cpp11_n3562| replace:: N3562
.. _cpp11_n3562: http://wg21.link/n3562
.. |cpp11_n4088| replace:: N4411
.. _cpp11_n4088: http://wg21.link/n4411
.. |cpp11_n4104| replace:: N4409
.. _cpp11_n4104: http://wg21.link/n4409
.. |cpp11_n4107| replace:: N4313
.. _cpp11_n4107: http://wg21.link/n4313
.. |cpp11_n4406| replace:: N4406
.. _cpp11_n4406: http://wg21.link/n4406
.. |cpp17_n4399| replace:: N4399
.. _cpp17_n4399: http://wg21.link/n4399
.. |cpp17_n4560| replace:: N4560
.. _cpp17_n4560: http://wg21.link/n4560
.. |cpp17_n4755| replace:: N4755
.. _cpp17_n4755: http://wg21.link/n4755
.. |cpp19_n4808| replace:: N4808
.. _cpp19_n4808: http://wg21.link/n4808
.. |cpp26_n4948| replace:: N4948
.. _cpp26_n4948: http://wg21.link/n4948
.. |cpp20_p0075r1| replace:: P0075R1
.. _cpp20_p0075r1: http://wg21.link/p0075r1
.. |cpp20_p0443| replace:: P0443
.. _cpp20_p0443: https://github.com/executors/issaquah_2016
.. |p0792| replace:: P0792
.. _p0792: http://wg21.link/p0792
.. |p0159| replace:: P0159
.. _p0159: http://wg21.link/p0159
.. |cpp26_p1144| replace:: P1144
.. _cpp26_p1144: https://wg21.link/p1144
.. |p1393| replace:: P1393
.. _p1393: http://wg21.link/p1393
.. |p2220| replace:: P2220
.. _p2220: https://wg21.link/p2220
.. |p2300| replace:: P2300
.. _p2300: https://wg21.link/p2300
.. |p2440| replace:: P2440
.. _p2440: https://wg21.link/p2440

.. |semver| replace:: semver
.. _semver: https://semver.org

.. |ini_file_format| replace:: Windows INI file format
.. _ini_file_format: https://en.wikipedia.org/wiki/INI_file

.. |asio| replace:: Asio
.. _asio: https://think-async.com/Asio/
.. |hwloc| replace:: Portable Hardware Locality (HWLOC)
.. _hwloc: https://www.open-mpi.org/projects/hwloc/
.. |tbb| replace:: Intel Threading Building Blocks (TBB)
.. _tbb: https://www.threadingbuildingblocks.org/
.. |vtune| replace:: Intel VTune
.. _vtune: https://software.intel.com/content/www/us/en/develop/tools/vtune-profiler.html
.. |ppl| replace:: Microsoft Parallel Patterns Library (PPL)
.. _ppl: https://msdn.microsoft.com/en-us/library/dd492418.aspx
.. |cilk_pp| replace:: Cilk++
.. _cilk_pp: https://software.intel.com/en-us/articles/intel-cilk-plus/
.. |swarm| replace:: ETI SWift Adaptive Runtime Machine (SWARM)
.. _swarm: https://www.etinternational.com/index.php/products/swarmbeta/
.. |qthreads| replace:: Sandia National Labs Qthreads
.. _qthreads: https://www.cs.sandia.gov/qthreads/
.. |mpi| replace:: MPI
.. _mpi: https://en.wikipedia.org/wiki/Message_Passing_Interface
.. |openmp| replace:: OpenMP
.. _openmp: https://openmp.org/wp/
.. |charm_pp| replace:: Charm++
.. _charm_pp: https://charm.cs.uiuc.edu/
.. |pgas| replace:: PGAS
.. _pgas: https://www.pgas.org/
.. |chapel| replace:: Chapel
.. _chapel: https://chapel.cray.com/
.. |x10| replace:: X10
.. _x10: https://x10-lang.org/
.. |upc| replace:: UPC
.. _upc: https://upc.lbl.gov/
.. |fortress| replace:: Fortress
.. _fortress: https://labs.oracle.com/projects/plrg/Publications/index.html
.. |oneTBB| replace:: oneAPI Threading Building Blocks (oneTBB)
.. _oneTBB: https://spec.oneapi.io/versions/1.0-rev-3/elements/oneTBB/source/task_scheduler/task_group/task_group_cls.html

.. |email_hkaiser| image:: /_static/images/emails/hkaiser.png
.. |email_theller| image:: /_static/images/emails/theller.png
.. |email_aberge| image:: /_static/images/emails/aberge.png
.. |email_msimberg| image:: /_static/images/emails/msimberg.png
.. |email_jbiddiscombe| image:: /_static/images/emails/biddisco.png
.. |email_abikineev| image:: /_static/images/emails/antbikineev.png
.. |email_mstumpf| image:: /_static/images/emails/martinhstumpf.png
.. |email_blelbach| image:: /_static/images/emails/blelbach.png
.. |email_syang| image:: /_static/images/emails/syang16.png
.. |email_jhabraken| image:: /_static/images/emails/jhabraken.png
.. |email_sbrandt| image:: /_static/images/emails/sbrandt.png
.. |email_atrantan| image:: /_static/images/emails/atrantan.png
.. |email_alemoine| image:: /_static/images/emails/alemoine.png
.. |email_mbrodowicz| image:: /_static/images/emails/mbrodowicz.png
.. |email_vamatya| image:: /_static/images/emails/vamatya.png
.. |email_dkaratza| image:: /_static/images/emails/dkaratza.png
.. |email_ggonidelis| image:: /_static/images/emails/ggonidelis.png
.. |email_rstobaugh| image:: /_static/images/emails/rstobaugh.png
.. |email_bhumitattarde| image:: /_static/images/emails/bhumitattarde.png
'''

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
source_suffix = ['.rst']

# The encoding of source files.
source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'HPX'
project_copyright = f"2008-{datetime.now().year}, The STE||AR Group"
author = 'The STE||AR Group'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y.Z version.
version = '@HPX_CONF_DOCUMENTATION_SHORT_VERSION@'
# The full version, including alpha/beta/rc tags.
release = '@HPX_CONF_DOCUMENTATION_VERSION@'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# If true, '()' will be appended to :func: etc. cross-reference text.
add_function_parentheses = False

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
modindex_common_prefix = [ 'hpx' ]

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'sphinx_book_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    "home_page_in_toc": True,
    "repository_url": "https://github.com/STEllAR-GROUP/hpx",
    "use_repository_button": True,
    "use_issues_button": True
}

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = '_static/images/HPX_STELLAR_blue.png'

# The name of an image file (relative to this directory) to place at the top
# of the browser page.
html_favicon = '_static/images/favicon.png'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']
html_css_files = ['custom.css']
html_context = {
    'display_github': True,
    'github_user': 'STEllAR-GROUP',
    'github_repo': 'hpx',
    'github_version': 'master/docs/sphinx/',
}

# In case no commit is found, link to the master
if "@HPX_WITH_GIT_COMMIT_SHORT@" != "":
    html_context['commit'] = "@HPX_WITH_GIT_COMMIT_SHORT@"
else:
    html_context['commit'] = "master"

if "@HPX_WITH_GIT_COMMIT@" != "":
    html_context['fullcommit'] = "@HPX_WITH_GIT_COMMIT@"
else:
    html_context['fullcommit'] = "master"

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
html_last_updated_fmt = '%b %d, %Y'

# If false, no module index is generated.
html_domain_indices = True

# If false, no index is generated.
html_use_index = True

# If true, the index is split into individual pages for each letter.
html_split_index = True

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = False

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
html_show_copyright = True

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'
html_search_language = 'en'

# Output file base name for HTML help builder.
htmlhelp_basename = 'HPXdoc'

# Files mentioned in this list are used by sphinxcontrib.bibtex extension to generate
# references/citations
bibtex_bibfiles = ['references.bib']

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    'preamble': r'''
    \usepackage{enumitem}
    \setlistdepth{2000}
    \nonstopmode
    ''',
    'maxlistdepth': '100',
    'releasename': ' ', # NOTE: Needs the space. Empty string means default.
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'HPX.tex', 'HPX Documentation',
     'The {STE\\raisebox{.05em}{\\hspace{.1em}$|$\\hspace{0.1em}$|$\\hspace{.02em}}AR} Group',
     'manual'),
]

latex_show_urls = 'footnote'


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'hpx', 'HPX Documentation',
     [author], 1)
]

man_show_urls = True


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'HPX', 'HPX Documentation',
     author, 'HPX', 'The C++ Standard Library for Parallelism and Concurrency.',
     'Miscellaneous'),
]


# -- Options for Epub output ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = project_copyright
